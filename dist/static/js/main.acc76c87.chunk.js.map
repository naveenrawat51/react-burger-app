{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredient.css","components/Navigation/SideDrawer/SideDrawer.css","components/UI/Input/Input.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","containers/Layout/Layout.css","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","containers/Auth/Auth.css","App.css","hoc/Aux/Aux.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/layout.js","components/Burger/BurgerIngredients/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/WithErrorHandler/WithErrorHandler.js","axios-orders.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","alt","src","burgerLogo","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","openSideDrawer","toolbar","Toolbar","DesktopOnly","isAuth","backdrop","show","Backdrop","clicked","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","mobileOnly","closed","join","layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","burgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","length","values","reduce","a","b","Burger","buildControl","BuildControl","Label","label","removeIngrient","Less","disabled","disabledBtn","addIngredient","More","controls","buildControls","BuildControls","price","toFixed","ctrl","removeIngredient","buttondisabled","OrderButton","purchasable","purchasing","Modal","nextProps","nextState","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","ingredientsSummary","ingrediends","textTransform","continuePurchase","spinner","loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptors","interceptors","request","use","req","resInterceptors","response","res","eject","message","instance","create","baseURL","authSuccess","authData","data","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","updatePurchaseState","sum","el","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","buttonDisabledInfo","ing","orderSummary","textAlign","totalPrice","burgerBuilder","ingredientName","get","then","catch","actions","WithErrorHandler","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","validationError","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","deliveryMethod","email","isEmail","formIsValid","orderHandler","event","preventDefault","loading","formData","formElementIdentifier","order","ings","orderData","onOrderBurger","inputChangeHandler","inputIdentifier","JSON","parse","stringify","updatedFormElement","target","checkValidity","rules","isValid","trim","test","formElementsArray","id","config","form","onSubmit","formElement","index","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","match","component","Order","ingredientsName","amount","ingredientsOutput","ig","display","border","padding","Orders","fetchOrders","displayOrders","orders","fetchedOrders","ordersData","err","action","Auth","loginForm","password","isSignup","controlName","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","onSetRedirectPath","errorMessage","color","building","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","authFail","Logout","onLogout","App","onTryAutoSignup","getItem","userId","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","bacon","meat","reducer","updatedIngredient","updatedIngredients","updatedState","updatedIng","updatedIngs","updatedSt","newOrder","concat","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"yHACAA,EAAOC,QAAU,CAAC,YAAc,wBAAwB,SAAW,0BAA0B,OAAS,0BAA0B,OAAS,wBAAwB,KAAO,0BAA0B,OAAS,0BAA0B,MAAQ,wBAAwB,MAAQ,4B,mBCA7QD,EAAOC,QAAU,CAAC,WAAa,0BAA0B,KAAO,0BAA0B,MAAQ,0BAA0B,KAAO,0BAA0B,WAAa,4B,iBCA1KD,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,MAAQ,wBAAwB,aAAe,0BAA0B,QAAU,4B,iBCArID,EAAOC,QAAU,CAAC,aAAe,0BAA0B,MAAQ,0BAA0B,KAAO,0BAA0B,KAAO,4B,mBCArID,EAAOC,QAAU,CAAC,QAAU,0BAA0B,KAAO,0BAA0B,YAAc,0B,iBCArGD,EAAOC,QAAU,CAAC,eAAiB,0BAA0B,OAAS,4B,mBCAtED,EAAOC,QAAU,CAAC,cAAgB,0BAA0B,YAAc,wBAAwB,OAAS,4B,gBCA3GD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,QAAU,0BAA0B,OAAS,4B,0BCAhGD,EAAOC,QAAU,CAAC,QAAU,4B,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,4B,gBCAzBD,EAAOC,QAAU,CAAC,gBAAkB,0B,gBCApCD,EAAOC,QAAU,CAAC,aAAe,4B,gBCAjCD,EAAOC,QAAU,CAAC,SAAW,0B,iBCA7BD,EAAOC,QAAU,CAAC,OAAS,2B,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,4B,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,4B,gBCA3DD,EAAOC,QAAU,CAAC,gBAAkB,4B,gBCApCD,EAAOC,QAAU,CAAC,YAAc,4B,gBCAhCD,EAAOC,QAAU,CAAC,MAAQ,2B,gBCA1BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,YAAc,4B,yECAjED,EAAOC,QAAU,CAAC,IAAM,0BAA0B,WAAW,0BAA0B,gBAAgB,wBAAwB,aAAa,0BAA0B,WAAW,4B,mICElKC,G,MAFH,SAAAC,GAAK,OAAIA,EAAMC,W,kCCDZ,MAA0B,wC,iBCU1BC,EANF,SAACF,GAAD,OACT,yBAAKG,UAAWC,IAAQC,MACpB,yBAAKC,IAAI,UAAUC,IAAKC,M,0CCejBC,EAhBQ,SAACT,GAAD,OACnB,wBAAIG,UAAWC,IAAQM,gBACnB,kBAAC,IAAD,CACIC,GAAIX,EAAMY,KACVC,OAAK,EACLC,gBAAiBV,IAAQW,QACxBf,EAAMC,YCMJe,EAbS,SAAChB,GAAD,OACpB,wBAAIG,UAAWC,IAAQa,iBACnB,kBAAC,EAAD,CAAgBL,KAAK,KAArB,kBACEZ,EAAMkB,gBACN,kBAAC,EAAD,CAAgBN,KAAK,WAArB,UACA,KACAZ,EAAMkB,gBACN,kBAAC,EAAD,CAAgBN,KAAK,WAArB,UACA,kBAAC,EAAD,CAAgBA,KAAK,UAArB,W,iBCMKO,EAdM,SAACnB,GAClB,OACI,yBAAKG,UAAWC,IAAQgB,aAAcC,QAASrB,EAAMsB,gBACjD,8BACA,8BACA,gCCcGC,EAhBC,SAACvB,GAAD,OACZ,4BAAQG,UAAWC,IAAQoB,SACvB,kBAAC,EAAD,CAAcF,eAAgBtB,EAAMsB,iBACpC,yBAAKnB,UAAWC,IAAQC,MACxB,kBAAC,EAAD,OAEA,yBAAKF,UAAWC,IAAQqB,aACpB,kBAAC,EAAD,CAAiBP,gBAAiBlB,EAAM0B,Y,kCCRrCC,EAJE,SAAC3B,GAAD,OACbA,EAAM4B,KAAO,yBAAKzB,UAAWC,IAAQyB,SAAUR,QAASrB,EAAM8B,UAAmB,MC+BtEC,EA1BI,SAAC/B,GAChB,IAAIgC,EAAkB,CAAC5B,IAAQ6B,WAAY7B,IAAQ8B,OAInD,OAHGlC,EAAMmC,OACLH,EAAkB,CAAC5B,IAAQ6B,WAAY7B,IAAQgC,OAG/C,kBAACC,EAAD,KACA,yBAAKlC,UAAWC,IAAQkC,YACxB,kBAAC,EAAD,CAAUV,KAAM5B,EAAMmC,KAAML,QAAS9B,EAAMuC,UAE3C,yBAAKpC,UAAW6B,EAAgBQ,KAAK,MACjC,yBAAKrC,UAAWC,IAAQC,MAC5B,kBAAC,EAAD,OAEI,6BACI,kBAAC,EAAD,CAAiBa,gBAAiBlB,EAAM0B,a,OCflDe,E,4MAEFC,MAAQ,CACJC,gBAAgB,G,EAGpBC,wBAA0B,WACtB,EAAKC,SAAS,CAAEF,gBAAgB,K,EAGpCG,wBAA0B,WACtB,EAAKD,UAAS,SAACE,GACX,MAAO,CAAEJ,gBAAiB,EAAKD,MAAMC,oB,uDAKzC,OACI,kBAACN,EAAD,KACA,kBAAC,EAAD,CACAX,OAAQsB,KAAKhD,MAAMkB,gBACnBI,eAAgB0B,KAAKF,0BACrB,kBAAC,EAAD,CACApB,OAAQsB,KAAKhD,MAAMkB,gBACnBiB,KAAMa,KAAKN,MAAMC,eACjBJ,OAAQS,KAAKJ,0BACb,0BAAMzC,UAAWC,IAAQ6C,SACpBD,KAAKhD,MAAMC,e,GA3BPiD,aAuCJC,eALO,SAAAT,GACpB,MAAO,CACHxB,kBAAiBwB,EAAMU,KAAKC,SAGnBF,CAAyBV,G,gCCJ3Ba,EAvCU,SAACtD,GACtB,IAAIuD,EAAa,KAEjB,OAAQvD,EAAMwD,MACV,IAAM,eACFD,EAAa,yBAAKpD,UAAWC,IAAQqD,cACrC,MACJ,IAAM,YACFF,EACI,yBAAKpD,UAAWC,IAAQsD,UACpB,yBAAKvD,UAAWC,IAAQuD,SACxB,yBAAKxD,UAAWC,IAAQwD,UAGhC,MACJ,IAAM,OACFL,EAAa,yBAAKpD,UAAWC,IAAQyD,OACrC,MACJ,IAAM,SACFN,EAAa,yBAAKpD,UAAWC,IAAQ0D,SACrC,MACJ,IAAM,QACFP,EAAa,yBAAKpD,UAAWC,IAAQ2D,QACrC,MACJ,IAAM,QACFR,EAAa,yBAAKpD,UAAWC,IAAQ4D,QACrC,MACJ,QACIT,EAAa,KAIrB,OAAOA,G,iBCNIU,EAzBA,SAACjE,GACZ,IAAIkE,EAAuBC,OAAOC,KAAKpE,EAAMqE,aACxCC,KAAI,SAAAC,GACD,OAAO,YAAIC,MAAMxE,EAAMqE,YAAYE,KAASD,KAAI,SAACG,EAAGC,GAChD,OAAO,kBAAC,EAAD,CAAkBC,IAAKJ,EAAQG,EAAGlB,KAAMe,UAQ3D,OALGJ,OAAOC,KAAKpE,EAAMqE,aAAaO,OAAS,GAC0B,IAA7DT,OAAOU,OAAO7E,EAAMqE,aAAaS,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,OACtDd,EAAuB,gEAI3B,yBAAK/D,UAAWC,IAAQ6E,QACpB,kBAAC,EAAD,CAAkBzB,KAAK,cACtBU,EACD,kBAAC,EAAD,CAAkBV,KAAK,mB,kCCKpB0B,EAtBM,SAAClF,GAClB,OACI,yBAAKG,UAAWC,IAAQ+E,cACpB,yBAAKhF,UAAWC,IAAQgF,OAAQpF,EAAMqF,OACtC,4BACIhE,QAASrB,EAAMsF,eACfnF,UAAWC,IAAQmF,KACnBC,SAAUxF,EAAMyF,aAHpB,QAIA,4BACIpE,QAASrB,EAAM0F,cACfvF,UAAWC,IAAQuF,MAFvB,UCPNC,EAAW,CACb,CAAEP,MAAO,QAAS7B,KAAM,SACxB,CAAE6B,MAAO,QAAS7B,KAAM,SACxB,CAAE6B,MAAO,SAAU7B,KAAM,UACzB,CAAE6B,MAAO,OAAQ7B,KAAM,SAkCZqC,GAhCO,SAAC7F,GAEnB,OACI,yBAAKG,UAAWC,IAAQ0F,eACpB,6CAAkB,gCAAS9F,EAAM+F,MAAMC,QAAQ,KAC9CJ,EAAStB,KAAI,SAAA2B,GAAI,OACd,kBAAC,EAAD,CACItB,IAAKsB,EAAKZ,MACVA,MAAOY,EAAKZ,MACZK,cAAe,kBAAM1F,EAAM0F,cAAcO,EAAKzC,OAC9C8B,eAAgB,kBAAMtF,EAAMkG,iBAAiBD,EAAKzC,OAClDiC,YAAazF,EAAMmG,eAAeF,EAAKzC,WAE/C,4BACIrD,UAAWC,IAAQgG,YACnBZ,UAAWxF,EAAMqG,YACjBhF,QAASrB,EAAMsG,YACdtG,EAAM0B,OAAS,YAAc,sB,oBCE/B6E,G,oLAvBWC,EAAWC,GAC7B,OAAOD,EAAU5E,OAASoB,KAAKhD,MAAM4B,MAAQ4E,EAAUvG,WAAa+C,KAAKhD,MAAMC,W,+BAI/E,OAEQ,kBAACoC,EAAD,KACI,kBAAC,EAAD,CAAUT,KAAMoB,KAAKhD,MAAM4B,KAAME,QAASkB,KAAKhD,MAAM0G,cACrD,yBACIvG,UAAWC,KAAQmG,MACnBI,MAAO,CACHC,UAAW5D,KAAKhD,MAAM4B,KAAO,gBAAkB,qBAC/CiF,QAAS7D,KAAKhD,MAAM4B,KAAO,IAAM,MAEpCoB,KAAKhD,MAAMC,e,GAjBhBiD,a,oBCOL4D,GATA,SAAC9G,GAAD,OACX,4BACIG,UAAW,CAACC,KAAQ2G,OAAQ3G,KAAQJ,EAAMgH,UAAUxE,KAAK,KACzDgD,SAAUxF,EAAMwF,SAChBnE,QAASrB,EAAM8B,SACd9B,EAAMC,WC+BAgH,G,sNA5BD,IAAD,OACCC,EAAqB/C,OAAOC,KAAKpB,KAAKhD,MAAMmH,aAC7C7C,KAAI,SAAAC,GAAK,OAAI,wBAAII,IAAKJ,GACnB,0BAAMoC,MAAO,CAAES,cAAe,eAAiB7C,GADrC,KACqD,EAAKvE,MAAMmH,YAAY5C,OAE9F,OACI,kBAAClC,EAAD,KACI,0CACA,iFACA,4BACK6E,GAEL,2BAAG,gDAAsBlE,KAAKhD,MAAM+F,MAAMC,QAAQ,KAClD,mDACA,kBAAC,GAAD,CAAQgB,QAAQ,SAASlF,QAASkB,KAAKhD,MAAM0G,aAA7C,UACA,kBAAC,GAAD,CAAQM,QAAQ,UAAUlF,QAASkB,KAAKhD,MAAMqH,kBAA9C,iB,GArBWnE,a,oBCIZoE,GANC,WACZ,OACI,yBAAKnH,UAAWC,KAAQmH,QAAxB,eCwCOC,GAzCU,SAACC,EAAkBC,GACxC,mNAEIhF,MAAQ,CACJiF,MAAO,MAHf,EAqBIC,sBAAwB,WACpB,EAAK/E,SAAS,CAAE8E,MAAO,QAtB/B,mEAM0B,IAAD,OACjB3E,KAAK6E,gBAAkBH,EAAMI,aAAaC,QAAQC,KAAI,SAAAC,GAElD,OADA,EAAKpF,SAAS,CAAE8E,MAAO,OAChBM,KAEXjF,KAAKkF,gBAAkBR,EAAMI,aAAaK,SAASH,KAAI,SAAAI,GAAG,OAAIA,KAAK,SAAAT,GAC/D,EAAK9E,SAAS,CAAE8E,MAAOA,SAZnC,6CAiBQD,EAAMI,aAAaC,QAAQM,MAAMrF,KAAK6E,iBACtCH,EAAMI,aAAaK,SAASE,MAAMrF,KAAKkF,mBAlB/C,+BA0BQ,OACI,kBAAC7F,EAAD,KACI,kBAAC,GAAD,CACIT,KAAMoB,KAAKN,MAAMiF,MACjBjB,YAAa1D,KAAK4E,uBACjB5E,KAAKN,MAAMiF,MAAQ3E,KAAKN,MAAMiF,MAAMW,QAAU,KAHnD,MAKA,kBAACb,EAAqBzE,KAAKhD,YAjC3C,GAAqBkD,c,oBCGVqF,GANEb,KAAMc,OAAO,CAC1BC,QAAS,kDCMAC,GAAc,SAACC,GACxB,MAAO,CACHnF,KCQoB,eDPpBoF,KAAMD,IAWDE,GAAS,WAIlB,OAHAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,kBACxBD,aAAaC,WAAW,UACjB,CACHvF,KCPmB,gBDWdwF,GAAmB,SAAAC,GAC5B,OAAO,SAAAC,GACHC,YAAW,WACPD,EAASL,QACO,IAAjBI,KAiCEG,GAAsB,SAAAC,GAC/B,MAAO,CACH7F,KChD8B,yBDiD9B6F,KAAMA,IE3DRC,G,4MAEF5G,MAAQ,CACJ4D,YAAY,G,EAOhBiD,oBAAsB,SAAClF,GAKnB,OAJYF,OAAOC,KAAKC,GACnBC,KAAI,SAAAC,GAAK,OAAIF,EAAYE,MACzBO,QAAO,SAAC0E,EAAKC,GAAN,OAAaD,EAAMC,IAAI,GAEtB,G,EAGjBC,gBAAkB,WACX,EAAK1J,MAAMkB,gBACV,EAAK2B,SAAS,CAAEyD,YAAY,KAE5B,EAAKtG,MAAM2J,sBAAsB,aACjC,EAAK3J,MAAM4J,QAAQC,KAAK,Y,EAKhCC,sBAAwB,WACpB,EAAKjH,SAAS,CAAEyD,YAAY,K,EAGhCyD,wBAA0B,WACtB,EAAK/J,MAAMgK,iBACX,EAAKhK,MAAM4J,QAAQC,KAAK,c,kEA3BxB7G,KAAKhD,MAAMiK,sB,+BA+BX,IAAMC,EAAkB,eACjBlH,KAAKhD,MAAMmK,KAElB,IAAK,IAAIxF,KAAOuF,EACZA,EAAmBvF,GAAOuF,EAAmBvF,IAAQ,EAEzD,IAAIyF,EAAe,KACfnG,EAASjB,KAAKhD,MAAM2H,MAAQ,wBAAIhB,MAAO,CAAC0D,UAAW,WAAvB,kCAAwE,kBAAC,GAAD,MAsBxG,OArBIrH,KAAKhD,MAAMmK,MACXlG,EACI,kBAAC5B,EAAD,KACI,kBAAC,EAAD,CAAQgC,YAAarB,KAAKhD,MAAMmK,MAChC,kBAAC,GAAD,CACIzE,cAAe1C,KAAKhD,MAAM0F,cAC1BQ,iBAAkBlD,KAAKhD,MAAMkG,iBAC7BC,eAAgB+D,EAChBnE,MAAO/C,KAAKhD,MAAMsK,WAClBjE,YAAarD,KAAKuG,oBAAoBvG,KAAKhD,MAAMmK,KACjDzI,OAAQsB,KAAKhD,MAAMkB,gBACnBoF,WAAYtD,KAAK0G,mBAG7BU,EAAe,kBAAC,GAAD,CACXjD,YAAanE,KAAKhD,MAAMmK,IACxBzD,YAAa1D,KAAK8G,sBAClBzC,iBAAkBrE,KAAK+G,wBACvBhE,MAAO/C,KAAKhD,MAAMsK,cAItB,kBAACjI,EAAD,KACI,kBAAC,GAAD,CAAOT,KAAMoB,KAAKN,MAAM4D,WAAYI,YAAa1D,KAAK8G,uBACjDM,GAEJnG,O,GAxEWf,aAiGbC,gBAnBS,SAACT,GACrB,MAAO,CACHyH,IAAKzH,EAAM6H,cAAclG,YACzBiG,WAAY5H,EAAM6H,cAAcD,WAChC3C,MAAOjF,EAAM6H,cAAc5C,MAC3BzG,kBAAiBwB,EAAMU,KAAKC,UAIT,SAAA6F,GACvB,MAAO,CACHxD,cAAe,SAAC8E,GAAD,OAAoBtB,EClGhC,CACH1F,KFJuB,kBEKvBgH,eDgGkEA,KAClEtE,iBAAkB,SAACsE,GAAD,OAAoBtB,EC5FnC,CACH1F,KFV0B,qBEW1BgH,eD0FwEA,KACxEP,kBAAmB,kBAAMf,GCzEtB,SAAAA,GACHxB,GAAM+C,IAAI,qBACLC,MAAK,SAAAvC,GAAQ,OAAIe,EAfnB,CACH1F,KFhBuB,kBEiBvBa,YAa8C8D,EAASS,UAClD+B,OAAM,SAAAhD,GAAK,OAAIuB,EATjB,CACH1F,KFtBgC,oCCqGhCwG,eAAgB,kBAAMd,EEvEnB,CACH1F,KHzBqB,mBCgGrBmG,sBAAuB,SAACN,GAAD,OAAUH,EAAS0B,GAA4BvB,QAI/DlG,CAA6C0H,GAAiBvB,GAAe5B,K,oBGtF7EoD,GAnBS,SAAC9K,GACrB,OACI,yBAAKG,UAAWC,KAAQ2K,iBACpB,wDACA,yBAAKpE,MAAO,CAACqE,MAAO,OAAQC,OAAQ,SAChC,kBAAC,EAAD,CAAQ5G,YAAarE,EAAMqE,eAE/B,kBAAC,GAAD,CACA2C,QAAQ,SACRlF,QAAS9B,EAAMkL,mBAFf,UAKA,kBAAC,GAAD,CACAlE,QAAQ,UACRlF,QAAS9B,EAAMmL,mBAFf,c,gDC4CGC,GA1DD,SAACpL,GACX,IAAIqL,EAAe,KACbC,EAAe,CAAClL,KAAQmL,cAC1BC,EAAkB,KAStB,OAPIxL,EAAMyL,SAAWzL,EAAM0L,gBAAkB1L,EAAM2L,SAC/CL,EAAazB,KAAKzJ,KAAQwL,SAG1B5L,EAAMyL,SAAWzL,EAAM2L,UACvBH,EAAkB,2DAEdxL,EAAM6L,aACV,IAAK,QACDR,EAAe,yCACXlL,UAAWmL,EAAa9I,KAAK,MACzBxC,EAAM8L,cAFC,CAGXC,MAAO/L,EAAM+L,MACbC,SAAUhM,EAAMiM,WACpB,MAEJ,IAAK,WACDZ,EAAe,4CACXlL,UAAWmL,EAAa9I,KAAK,MACzBxC,EAAM8L,cAFC,CAGXC,MAAO/L,EAAM+L,MACbC,SAAUhM,EAAMiM,WACpB,MAEJ,IAAK,SACDZ,EAAe,4BACXlL,UAAWmL,EAAa9I,KAAK,KAC7BuJ,MAAO/L,EAAM+L,MACbC,SAAUhM,EAAMiM,SACfjM,EAAM8L,cAAcI,QAAQ5H,KAAI,SAAA6H,GAAM,OACnC,4BAAQxH,IAAKwH,EAAOJ,MAAOA,MAAOI,EAAOJ,OACpCI,EAAOC,kBAIpB,MAEJ,QACIf,EAAe,yCACXlL,UAAWC,KAAQmL,cACfvL,EAAM8L,cAFC,CAGXC,MAAO/L,EAAM+L,MACbC,SAAUhM,EAAMiM,WAE5B,OACI,yBAAK9L,UAAWC,KAAQiM,OACpB,2BAAOlM,UAAWC,KAAQgF,OAAQpF,EAAMqF,OACvCgG,EACAG,IC9CPc,G,4MACF5J,MAAQ,CACJ6J,UAAW,CACPC,KAAM,CACFX,YAAa,QACbC,cAAe,CACXtI,KAAM,OACNiJ,YAAa,aAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbkB,OAAQ,CACJhB,YAAa,QACbC,cAAe,CACXtI,KAAM,OACNiJ,YAAa,eAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbmB,QAAS,CACLjB,YAAa,QACbC,cAAe,CACXtI,KAAM,OACNiJ,YAAa,iBAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,EACVI,UAAW,EACXC,UAAW,EACXC,WAAW,GAEfL,OAAO,EACPjB,SAAS,GAEbuB,QAAS,CACLrB,YAAa,QACbC,cAAe,CACXtI,KAAM,OACNiJ,YAAa,gBAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbwB,eAAgB,CACZtB,YAAa,SACbC,cAAe,CACXI,QAAS,CACL,CAAEH,MAAO,UAAWK,aAAc,WAClC,CAAEL,MAAO,UAAWK,aAAc,WAClC,CAAEL,MAAO,OAAQK,aAAc,UAGvCL,MAAO,UACPW,WAAY,GACZE,OAAO,GAEXQ,MAAO,CACHvB,YAAa,QACbC,cAAe,CACXtI,KAAM,QACNiJ,YAAa,cAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,EACVU,SAAS,GAEbT,OAAO,EACPjB,SAAS,IAGjB2B,aAAa,G,EAGjBC,aAAe,SAACC,GACZA,EAAMC,iBACN,EAAK5K,SAAS,CAAE6K,SAAS,IACzB,IAAMC,EAAW,GACjB,IAAK,IAAIC,KAAyB,EAAKlL,MAAM6J,UACzCoB,EAASC,GAAyB,EAAKlL,MAAM6J,UAAUqB,GAAuB7B,MAElF,IAAM8B,EAAQ,CACV1G,YAAa,EAAKnH,MAAM8N,KACxB/H,MAAO,EAAK/F,MAAMsK,WAAWtE,QAAQ,GACrC+H,UAAWJ,GAGf,EAAK3N,MAAMgO,cAAcH,EAAO,EAAK7N,MAAMqD,Q,EAgC/C4K,mBAAqB,SAACT,EAAOU,GACzB,IAAMP,EAAQ,eACPQ,KAAKC,MAAMD,KAAKE,UAAU,EAAK3L,MAAM6J,aAEtC+B,EAAkB,eACjBX,EAASO,IAEhBI,EAAmBvC,MAAQyB,EAAMe,OAAOxC,MACxCuC,EAAmB1B,MAAQ,EAAK4B,cAAcF,EAAmBvC,MAAOuC,EAAmB5B,YAC3F4B,EAAmB3C,SAAU,EAC7BgC,EAASO,GAAmBI,EAE5B,IAAIhB,GAAc,EAClB,IAAK,IAAIY,KAAmBP,EACxBL,EAAcK,EAASO,GAAiBtB,OAASU,EAGrD,EAAKzK,SAAS,CAAE0J,UAAWoB,EAAUL,YAAaA,K,4DA9CxCvB,EAAO0C,GACjB,IAAIC,GAAU,EAcd,GAZID,EAAM9B,WACN+B,EAA2B,KAAjB3C,EAAM4C,QAAiBD,GAGjCD,EAAM1B,YACN2B,EAAU3C,EAAMnH,QAAU6J,EAAM1B,WAAa2B,GAG7CD,EAAMzB,YACN0B,EAAU3C,EAAMnH,QAAU6J,EAAMzB,WAAa0B,GAG7CD,EAAMpB,QAAS,CAEfqB,EADgB,wJACEE,KAAK7C,IAAU2C,EAGrC,GAAID,EAAMxB,UAAW,CAEjByB,EADgB,QACEE,KAAK7C,IAAU2C,EAIrC,OAAOA,I,+BAsBD,IAAD,OACCG,EAAoB,GAC1B,IAAK,IAAIlK,KAAO3B,KAAKN,MAAM6J,UACvBsC,EAAkBhF,KAAK,CACnBiF,GAAInK,EACJoK,OAAQ/L,KAAKN,MAAM6J,UAAU5H,KAGrC,IAAIqK,EACA,0BAAMC,SAAUjM,KAAKuK,cAChBsB,EAAkBvK,KAAI,SAAC4K,EAAaC,GAAd,OACnB,kBAAC,GAAD,CACIxK,IAAKwK,EACLtD,YAAaqD,EAAYH,OAAOlD,YAChCC,cAAeoD,EAAYH,OAAOjD,cAClCC,MAAOmD,EAAYH,OAAOhD,MAC1BE,QAAS,SAACuB,GAAD,OAAW,EAAKS,mBAAmBT,EAAO0B,EAAYJ,KAC/DrD,SAAUyD,EAAYH,OAAOnC,MAC7BlB,eAAgBwD,EAAYH,OAAOrC,WACnCf,QAASuD,EAAYH,OAAOpD,aAEpC,kBAAC,GAAD,CACA3E,QAAQ,UACRxB,UAAWxC,KAAKN,MAAM4K,aAFtB,UAQR,OAHItK,KAAKhD,MAAM0N,UACXsB,EAAO,kBAAC,GAAD,OAGP,yBAAK7O,UAAWC,KAAQkM,aACpB,wDACC0C,O,GAzLS9L,aA8MXC,gBAfS,SAAAT,GACpB,MAAO,CACHoL,KAAMpL,EAAM6H,cAAclG,YAC1BiG,WAAY5H,EAAM6H,cAAcD,WAChCoD,QAAShL,EAAMmL,MAAMH,QACrBrK,MAAOX,EAAMU,KAAKC,UAIC,SAAA6F,GACvB,MAAO,CACH8E,cAAe,SAACD,EAAW1K,GAAZ,OAAsB6F,EH5Lf,SAAC6E,EAAW1K,GACtC,OAAO,SAAA6F,GACHA,EAPG,CACH1F,KHb6B,0BGoB7BkE,GAAM0H,KAAK,qBAAuB/L,EAAO0K,GACpCrD,MAAM,SAAAvC,GAAQ,OAAIe,EAzBM,SAAC4F,EAAIf,GACtC,MAAO,CACHvK,KHG+B,0BGF/B6L,QAASP,EACTf,UAAWA,GAqBqBuB,CAAsBnH,EAASS,KAAK4D,KAAMuB,OACrEpD,OAAM,SAAAhD,GAAK,OAAIuB,EAlBM,SAACvB,GAC/B,MAAO,CACHnE,KHJ4B,uBGK5BmE,MAAOA,GAesB4H,CAAmB5H,QGuLFiD,CAAuBmD,EAAW1K,QAIzEF,CAA6CqE,GAAiB8E,GAAa5E,KClNpF8H,G,4MAGFC,yBAA2B,WACvB,EAAKzP,MAAM4J,QAAQ8F,U,EAGvBC,yBAA2B,WACvB,EAAK3P,MAAM4J,QAAQgG,QAAQ,2B,uDAI3B,IAAIC,EAAU,kBAAC,KAAD,CAAUlP,GAAG,MAC3B,GAAGqC,KAAKhD,MAAM8N,KAAM,CAChB,IAAMgC,EAAoB9M,KAAKhD,MAAM+P,UAAW,kBAAC,KAAD,CAAUpP,GAAG,MAAQ,KACrEkP,EACA,6BACKC,EACD,kBAAC,GAAD,CACAzL,YAAarB,KAAKhD,MAAM8N,KACxB5C,kBAAmBlI,KAAKyM,yBACxBtE,kBAAmBnI,KAAK2M,2BACxB,kBAAC,KAAD,CACItG,KAAMrG,KAAKhD,MAAMgQ,MAAM3G,KAAO,gBAC9B4G,UAAW3D,MAGvB,OAAOuD,M,GA3BQ3M,aAuCRC,gBARS,SAAAT,GACpB,MAAO,CACHoL,KAAMpL,EAAM6H,cAAclG,YAC1B0L,UAAWrN,EAAMmL,MAAMkC,aAKhB5M,CAAyBqM,I,oBCZzBU,GA9BD,SAAClQ,GACX,IAAMqE,EAAc,GACpB,IAAK,IAAI8L,KAAmBnQ,EAAMqE,YAC9BA,EAAYwF,KAAK,CACb2C,KAAM2D,EACNC,OAAQpQ,EAAMqE,YAAY8L,KAIlC,IAAME,EAAoBhM,EAAYC,KAAI,SAACgM,EAAInB,GAC3C,OAAO,0BACHxI,MAAO,CACHS,cAAe,aACfmJ,QAAS,eACTtF,OAAQ,QACRuF,OAAQ,iBACRC,QAAS,OAEb9L,IAAKwK,GACJmB,EAAG9D,KATD,KASS8D,EAAGF,OATZ,QAYX,OACI,yBAAKjQ,UAAWC,KAAQ8P,OACpB,2CAAiBG,GACjB,qCAAU,uCAAarQ,EAAM+F,UCrBnC2K,G,kLAGE1N,KAAKhD,MAAM2Q,YAAY3N,KAAKhD,MAAMqD,S,+BAIlC,IAAIuN,EAAgB,kBAAC,GAAD,MAOpB,OANI5N,KAAKhD,MAAM0N,UACXkD,EAAgB5N,KAAKhD,MAAM6Q,OAAOvM,KAAI,SAAAuJ,GAAK,OAAK,kBAAC,GAAD,CAC5ClJ,IAAKkJ,EAAMiB,GACXzK,YAAawJ,EAAM1G,YACnBpB,MAAO8H,EAAM9H,YAGjB,6BACK6K,O,GAhBI1N,aAoCNC,gBAdS,SAAAT,GACpB,MAAO,CACHmO,OAAQnO,EAAMmL,MAAMgD,OACpBnD,QAAShL,EAAMmL,MAAMH,QACrBrK,MAAOX,EAAMU,KAAKC,UAIC,SAAA6F,GACvB,MAAO,CACHyH,YAAa,SAACtN,GAAD,OAAW6F,ENsBL,SAAC7F,GACxB,OAAO,SAAA6F,GACHA,EAPG,CACH1F,KH5CyB,sBGmDzBkE,GAAM+C,IAAI,qBAAuBpH,GAC5BqH,MAAK,SAAAtC,GACF,IAAM0I,EAAgB,GACtB,IAAK,IAAInM,KAAOyD,EAAIQ,KAChBkI,EAAcjH,KAAd,2BACOzB,EAAIQ,KAAKjE,IADhB,IAEImK,GAAInK,KAGZuE,EA/BL,CACH1F,KH7B4B,uBG8B5BuN,WA6BoCD,OAE/BnG,OAAM,SAAAqG,GAAG,OAAI9H,EA1Bf,CACH1F,KHnCyB,oBGoCzBmE,MAAOA,IAHgB,IAACA,MMTSsJ,CAAmB5N,QAI7CF,CAA6C0H,GAAiB6F,GAAQhJ,K,6BClC/EwJ,G,4MACFxO,MAAQ,CACJyO,UAAW,CACP/D,MAAO,CACHvB,YAAa,QACbC,cAAe,CACXtI,KAAM,QACNiJ,YAAa,sBAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,EACVU,SAAS,GAEbT,OAAO,EACPjB,SAAS,GAEbyF,SAAU,CACNvF,YAAa,QACbC,cAAe,CACXtI,KAAM,WACNiJ,YAAa,iBAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,EACVI,UAAW,GAEfH,OAAO,EACPjB,SAAS,IAGjB2B,aAAa,EACb+D,UAAU,G,EAsCdpD,mBAAqB,SAACT,EAAO8D,GACzB,IAAM3D,EAAQ,2BACPQ,KAAKC,MAAMD,KAAKE,UAAU,EAAK3L,MAAMyO,aAD9B,mBAETG,EAFS,2BAGH,EAAK5O,MAAMyO,UAAUG,IAHlB,IAINvF,MAAOyB,EAAMe,OAAOxC,MACpBa,MAAO,EAAK4B,cAAchB,EAAMe,OAAOxC,MAAO,EAAKrJ,MAAMyO,UAAUG,GAAa5E,YAChFf,SAAS,MAIb2B,GAAc,EAClB,IAAK,IAAIY,KAAmBP,EACxBL,EAAcK,EAASO,GAAiBtB,OAASU,EAGrD,EAAKzK,SAAS,CAAEsO,UAAWxD,EAAUL,YAAaA,K,EAGtDiE,cAAgB,SAAA/D,GACZA,EAAMC,iBACN,EAAKzN,MAAMwR,OAAO,EAAK9O,MAAMyO,UAAU/D,MAAMrB,MAAO,EAAKrJ,MAAMyO,UAAUC,SAASrF,MAAO,EAAKrJ,MAAM2O,W,EAGxGI,sBAAwB,WACpB,EAAK5O,UAAS,SAAAE,GACV,MAAO,CAAEsO,UAAWtO,EAAUsO,c,kEA5D9BrO,KAAKhD,MAAM0R,gBAAkD,MAAhC1O,KAAKhD,MAAM2R,kBACxC3O,KAAKhD,MAAM4R,sB,oCAIL7F,EAAO0C,GACjB,IAAIC,GAAU,EAcd,GAZID,EAAM9B,WACN+B,EAA2B,KAAjB3C,EAAM4C,QAAiBD,GAGjCD,EAAM1B,YACN2B,EAAU3C,EAAMnH,QAAU6J,EAAM1B,WAAa2B,GAG7CD,EAAMzB,YACN0B,EAAU3C,EAAMnH,QAAU6J,EAAMzB,WAAa0B,GAG7CD,EAAMpB,QAAS,CAEfqB,EADgB,wJACEE,KAAK7C,IAAU2C,EAGrC,GAAID,EAAMxB,UAAW,CAEjByB,EADgB,QACEE,KAAK7C,IAAU2C,EAIrC,OAAOA,I,+BAgCD,IAAD,OACCG,EAAoB,GAC1B,IAAK,IAAIlK,KAAO3B,KAAKN,MAAMyO,UACvBtC,EAAkBhF,KAAK,CACnBiF,GAAInK,EACJoK,OAAQ/L,KAAKN,MAAMyO,UAAUxM,KAIrC,IAAIqK,EAAOH,EAAkBvK,KAAI,SAAC4K,EAAaC,GAAd,OAC7B,kBAAC,GAAD,CACIxK,IAAKuK,EAAYJ,GACjBjD,YAAaqD,EAAYH,OAAOlD,YAChCC,cAAeoD,EAAYH,OAAOjD,cAClCC,MAAOmD,EAAYH,OAAOhD,MAC1BE,QAAS,SAACuB,GAAD,OAAW,EAAKS,mBAAmBT,EAAO0B,EAAYJ,KAC/DrD,SAAUyD,EAAYH,OAAOnC,MAC7BlB,eAAgBwD,EAAYH,OAAOrC,WACnCf,QAASuD,EAAYH,OAAOpD,aAGhC3I,KAAKhD,MAAM0N,UACXsB,EAAO,kBAAC,GAAD,OAGX,IAAI6C,EAAe,KAInB,OAHI7O,KAAKhD,MAAM2H,QACXkK,EAAe,uBAAGlL,MAAO,CAAEmL,MAAO,QAAU9O,KAAKhD,MAAM2H,QAGvD,yBAAKxH,UAAWC,KAAQ8Q,MACnBlO,KAAKhD,MAAMkB,gBAAkB,kBAAC,KAAD,CAAUP,GAAIqC,KAAKhD,MAAM2R,mBAAuB,KAC7EE,EACD,0BAAM5C,SAAUjM,KAAKuO,eAChBvC,EACD,kBAAC,GAAD,CACIhI,QAAQ,UACRxB,UAAWxC,KAAKN,MAAM4K,aAActK,KAAKN,MAAM2O,SAAW,SAAW,WAE7E,kBAAC,GAAD,CACIrK,QAAQ,SACRlF,QAASkB,KAAKyO,uBAFlB,aAEoDzO,KAAKN,MAAM2O,SAAW,SAAW,e,GA7IlFnO,aAkKJC,gBAfS,SAAAT,GACpB,MAAO,CACHgL,QAAShL,EAAMU,KAAKsK,QACpB/F,MAAOjF,EAAMU,KAAKuE,MAClBzG,kBAAiBwB,EAAMU,KAAKC,MAC5BqO,eAAgBhP,EAAM6H,cAAcwH,SACpCJ,iBAAkBjP,EAAMU,KAAKuO,qBAGV,SAAAzI,GACvB,MAAO,CACHsI,OAAQ,SAACpE,EAAOgE,EAAUC,GAAlB,OAA+BnI,EX/H3B,SAACkE,EAAOgE,EAAUC,GAClC,OAAO,SAAAnI,GACHA,EAtCG,CACH1F,KCakB,eDyBlB,IAAMmF,EAAW,CACbyE,MAAOA,EACPgE,SAAUA,EACVY,mBAAmB,GAGnBC,EAAM,wGACLZ,IACDY,EAAM,qHAGVvK,KAAM0H,KAAK6C,EAAKtJ,GACX+B,MAAK,SAAAtC,GACF,IAAM8J,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAiC,IAArBhK,EAAIQ,KAAKyJ,WAChEvJ,aAAawJ,QAAQ,QAASlK,EAAIQ,KAAK2J,SACvCzJ,aAAawJ,QAAQ,iBAAkBJ,GACvCpJ,aAAawJ,QAAQ,SAAUlK,EAAIQ,KAAK4J,SACxCtJ,EAASR,GAAYN,EAAIQ,OACzBM,EAASF,GAAiBZ,EAAIQ,KAAKyJ,eAEtC1H,OAAM,SAAAhD,GACHuB,EAhDQ,SAACvB,GACrB,MAAO,CACHnE,KCEiB,YDDjBmE,MAAOA,GA6CU8K,CAAS9K,EAAMQ,SAASS,KAAKjB,MAAMW,cWuGJ2I,CAAY7D,EAAOgE,EAAUC,KAC7EO,kBAAmB,kBAAM1I,EAAS+H,GAA2B,UAGtD9N,CAA6C+N,ICtKtDwB,G,4MACFhQ,MAAQ,G,kEAGJM,KAAKhD,MAAM2S,a,+BAGX,OAAS,kBAAC,KAAD,CAAUhS,GAAG,U,GAPTuC,aAgBNC,eAAQ,MALI,SAAA+F,GACvB,MAAO,CACHyJ,SAAU,kBAAMzJ,EAAS0B,UAGlBzH,CAAkCuP,ICR3CE,G,kLAGF5P,KAAKhD,MAAM6S,oB,+BAIX,OACE,yBAAK1S,UAAU,OACd,kBAAC,EAAD,KACE,kBAAC,KAAD,KACA,kBAAC,KAAD,CAAOkJ,KAAK,YAAY4G,UAAWT,KACnC,kBAAC,KAAD,CAAOnG,KAAK,UAAU4G,UAAWS,KACjC,kBAAC,KAAD,CAAOrH,KAAK,SAAS4G,UAAWiB,KAChC,kBAAC,KAAD,CAAO7H,KAAK,UAAU4G,UAAWyC,KACjC,kBAAC,KAAD,CAAOrJ,KAAK,IAAIxI,OAAK,EAACoP,UAAW3G,Y,GAfxBpG,aA8BHC,eAAQ,MANI,SAAA+F,GACzB,MAAO,CACL2J,gBAAiB,kBAAM3J,GbsChB,SAAAA,GACH,IAAM7F,EAAQyF,aAAagK,QAAQ,SACnC,GAAIzP,EAEG,CACH,IAAM6O,EAAiB,IAAIC,KAAKrJ,aAAagK,QAAQ,mBACrD,GAAGZ,GAAkB,IAAIC,KACrBjJ,EAASL,UACN,CACH,IAAMkK,EAASjK,aAAagK,QAAQ,UAKpC5J,EAASR,GAJQ,CACb6J,QAASlP,EACTmP,QAASO,KAGb7J,EAASF,IAAkBkJ,EAAeE,WAAY,IAAID,MAAOC,WAAY,YAZjFlJ,EAASL,aarCN1F,CAAkCyP,IC/B7BI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnD,MACvB,2D,aClBOoD,GAAe,SAACC,EAAWC,GACpC,OAAO,2BACAD,GACAC,ICALC,GAAe,CACjBlP,YAAa,KACbiG,WAAY,EACZ3C,OAAO,EACPoK,UAAU,GAGRyB,GAAoB,CACtBC,MAAO,GACPC,OAAQ,GACRC,MAAO,GACPC,KAAM,IA8CKC,GA5CC,WAAmC,IAAlCnR,EAAiC,uDAAzB6Q,GAActC,EAAW,uCAE9C,OAAQA,EAAOzN,MACX,IflBuB,kBemBnB,IAAMsQ,EAAiB,gBAAM7C,EAAOzG,eAAiB9H,EAAM2B,YAAY4M,EAAOzG,gBAAkB,GAC1FuJ,EAAqBX,GAAa1Q,EAAM2B,YAAayP,GACrDE,EAAe,CACjB3P,YAAa0P,EACbzJ,WAAY5H,EAAM4H,WAAakJ,GAAkBvC,EAAOzG,gBACxDuH,UAAU,GAEd,OAAOqB,GAAa1Q,EAAOsR,GAC/B,If1B0B,qBe2BlB,IAAMC,EAAU,gBAAMhD,EAAOzG,eACxB9H,EAAM2B,YAAY4M,EAAOzG,gBAAkB,EACxC9H,EAAM2B,YAAY4M,EAAOzG,gBAAkB,EAC3C9H,EAAM2B,YAAY4M,EAAOzG,iBAC3B0J,EAAcd,GAAa1Q,EAAM2B,YAAa4P,GAC9CE,EAAY,CACd9P,YAAa6P,EACb5J,WAAY5H,EAAM4H,WAAakJ,GAAkBvC,EAAOzG,gBACxDuH,UAAU,GAEd,OAAOqB,GAAa1Q,EAAOyR,GACnC,IfrCuB,kBesCnB,OAAOf,GAAa1Q,EAAO,CACvB2B,YAAa,CACToP,MAAOxC,EAAO5M,YAAYoP,MAC1BE,MAAO1C,EAAO5M,YAAYsP,MAC1BD,OAAQzC,EAAO5M,YAAYqP,OAC3BE,KAAM3C,EAAO5M,YAAYuP,MAE7BtJ,WAAYiJ,GAAajJ,WACzB3C,OAAO,EACPoK,UAAU,IAElB,IfhDgC,2BeiD5B,OAAOqB,GAAa1Q,EAAO,CAAEiF,OAAO,IACxC,QACI,OAAOjF,ICpDb6Q,GAAe,CACjB1F,MAAO,GACPH,SAAS,EACTqC,WAAW,EACXc,OAAQ,IA8BGgD,GA3BC,WAAmC,IAAlCnR,EAAiC,uDAAzB6Q,GAActC,EAAW,uCAC9C,OAAQA,EAAOzN,MACX,IhBJ+B,0BgBK3B,IAAM4Q,EAAWhB,GAAanC,EAAOlD,UAAW,CAAEe,GAAImC,EAAO5B,UAC7D,OAAO+D,GAAa1Q,EAAO,CACvBgL,SAAS,EACTqC,WAAW,EACXlC,MAAOnL,EAAMmL,MAAMwG,OAAOD,KAElC,IhBV4B,uBgBWxB,OAAOhB,GAAa1Q,EAAO,CAAEgL,SAAS,IAC1C,IhBd6B,wBgBezB,OAAO0F,GAAa1Q,EAAO,CAAEgL,SAAS,IAC1C,IhBbqB,gBgBcjB,OAAO0F,GAAa1Q,EAAO,CAAEqN,WAAW,IAC5C,IhBZyB,oBgBarB,OAAOqD,GAAa1Q,EAAO,CAAEgL,SAAS,IAC1C,IhBb4B,uBgBcxB,OAAO0F,GAAa1Q,EAAO,CAAEmO,OAAQI,EAAOF,WAAYrD,SAAS,IACrE,IhBdyB,oBgBerB,OAAO0F,GAAa1Q,EAAO,CAAEgL,SAAS,IAC1C,QACI,OAAOhL,IC7Bb6Q,GAAe,CACjBlQ,MAAO,KACP0P,OAAQ,KACRpL,MAAO,KACP+F,SAAS,EACTiE,iBAAkB,KAmCPkC,GAhCC,WAAmC,IAAlCnR,EAAiC,uDAAzB6Q,GAActC,EAAW,uCAC9C,OAAQA,EAAOzN,MACX,IjBKkB,aiBJd,OAAO4P,GAAa1Q,EAAO,CAAEiF,MAAO,KAAM+F,SAAS,IACvD,IjBIoB,eiBHhB,OAAO0F,GAAa1Q,EAAO,CACvBW,MAAO4N,EAAOrI,KAAK2J,QACnBQ,OAAQ9B,EAAOrI,KAAK4J,QACpB7K,MAAO,KACP+F,SAAS,IAEjB,IjBFiB,YiBGb,IAAImE,EACJ,OAAQZ,EAAOtJ,OACX,IAAK,eAAgBkK,EAAe,mCAChC,MACJ,IAAK,mBAAoBA,EAAe,mBACpC,MACJ,IAAK,kBAAmBA,EAAe,0CACnC,MACJ,QAASA,EAAe,KAE5B,OAAOuB,GAAa1Q,EAAO,CAAEiF,MAAOkK,EAAcnE,SAAS,IAC/D,IjBbmB,ciBcf,OAAO0F,GAAa1Q,EAAO,CAAEW,MAAO,KAAM0P,OAAQ,OACtD,IjBb8B,yBiBc1B,OAAOK,GAAa1Q,EAAO,CAAEiP,iBAAkBV,EAAO5H,OAC1D,QACI,OAAO3G,I,SCxBb4R,GAAmBrB,OAAOsB,sCAAwCC,KAElEC,GAAcC,aAAgB,CAClCnK,cAAeoK,GACf9G,MAAO+G,GACPxR,KAAMyR,KAGFC,GAAQC,aAAYN,GAAaH,GACrCU,aAAgBC,QAGlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUN,MAAOA,IACjB,kBAAC,IAAD,KACI,kBAAC,GAAD,SAINO,SAASC,eAAe,SLgGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/K,MAAK,SAAAgL,GACJA,EAAaC,gBAEdhL,OAAM,SAAAhD,GACLiO,QAAQjO,MAAMA,EAAMW,c","file":"static/js/main.acc76c87.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"pgUasRYgKTdOMBDUTNak0\",\"BreadTop\":\"_1qwk-L-8NpT6Q3lyX9_XXF\",\"Seeds1\":\"_1NoR3Sg7ZkFv26IWaYSeB7\",\"Seeds2\":\"rJjjNXl8KAgomxzUAsNho\",\"Meat\":\"_27By3t6afo9AOFbaZHs-BQ\",\"Cheese\":\"_3Xxg-zMN5HGIkTGGAtS8nI\",\"Salad\":\"PEJF9v7w4x887LIhMkQna\",\"Bacon\":\"_1FuPvnvGSOPSwWWui0bCVS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"_21TuB0Dn6JJ4uEYkpf9Fnt\",\"Open\":\"_1pVYRaiLBtOhv7pDNimBtN\",\"Close\":\"_3Yv1lLM58kyRaR73W22KWZ\",\"Logo\":\"_3TkPvMPv1WUzP1NgAUT6zE\",\"mobileOnly\":\"_3bhqfiUYB1oOzFeJkp2Ojx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"s67N0w35nKdhFxX_3zncw\",\"Label\":\"_n-1my-7YxR9EuzWR3hhB\",\"InputElement\":\"_2-aFxd6_SUnHTHpTf8dvYS\",\"Invalid\":\"_1sl1p7M77V1I9nxTQviKpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"_1jYc3QBtl-VmgIWdCI3dgO\",\"Label\":\"_33Z-plxrqIneM7Mz2ytOp0\",\"Less\":\"_377MJOSYo2UYjMj1U14k03\",\"More\":\"_28-hQFZzubxjJbKbVayD5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"_2JJW-ZloCsemWXc-SwluYI\",\"Logo\":\"_1efBDQJDXv28ttI2RtLXHD\",\"DesktopOnly\":\"WADUdqFzcPCSrUAJGFXrf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"_23bcunS9Qq8yRK8U15WWqn\",\"active\":\"_2zJdO1aspVrGyx-JgFjMYX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"_3_01fOopnX44ubS-oaxkTR\",\"OrderButton\":\"myBwTggVYuoTSZ0phsfQj\",\"enable\":\"_3jYIqaQjQmo_d3HEVAUYmZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"QI7b2B9HFdWRqXJlhx5ZF\",\"Success\":\"_2dHUtYmIiKVpRl3omZjpfb\",\"Danger\":\"_2xnhNuUUklZ_76EhvNOs5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"_2fWdXx73utokZkSQg8nql-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"_19WaN2tuJCY7yX7kGD_ZBx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"_yd_dZzBcrRT8NyTlYD_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"_26to0rZE2eHfVYZs2qTwFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"efy1yH85jAELhES8l7b-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"_3K4F-Qd9PP5cwDxK60_fC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"_32_-amvWF8w07UmzDeLfZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"UBmsktTD6us6IP-6aYec5\",\"load2\":\"_1N7mgFPOaqyEMO5kgrH5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"_1xBm4j5hECL-q6sCIhiBB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"_1J81rlRO5zxuF98VMkEamZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"_4yi4ZpfqAgHINYViIZYP6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"_2YUr1vYMbwujw6K1HuakLc\",\"ContactData\":\"_1Fuu3PjfwjLKAWKqQXtkT9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"_1o-FpbQrR11SDFN-G7O4U3\",\"App-logo\":\"_3JCPttIlaO1n9gbarj-AYQ\",\"App-logo-spin\":\"RvI1Jd7nZvV5oabR4RbAY\",\"App-header\":\"_3iH8LjVH-8aINDFVrlCaZ1\",\"App-link\":\"_13fTZYk7Fx94Q52NR6_8FR\"};","\nconst aux = props => props.children;\n\nexport default aux;","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.css';\n\nconst logo = (props) => (\n    <div className={classes.Logo}>\n        <img alt=\"My Logo\" src={burgerLogo}/>\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport classes from './NavigationItem.css';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink\n            to={props.link}\n            exact\n            activeClassName={classes.active}>\n            {props.children}\n        </NavLink>\n    </li>\n)\n\nnavigationItem.propTypes = {\n    link: PropTypes.string.isRequired,\n    active: PropTypes.bool\n}\n\nexport default navigationItem;","import React from 'react';\nimport classes from './NavigationItems.css';\nimport NavigationItem from '../NavigationItems/NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link='/' >Burger Builder</NavigationItem>\n        { props.isAuthenticated\n        ? <NavigationItem link='/orders'>Orders</NavigationItem>\n        : null }\n        { props.isAuthenticated\n        ? <NavigationItem link='/logout'>Logout</NavigationItem>\n        : <NavigationItem link='/login'>Login</NavigationItem>\n        }\n    </ul>\n)\n \nexport default navigationItems;","import React from 'react';\nimport classes from './DrawerToggle.css';\nimport PropTypes from 'prop-types';\n\nconst drawerToggle = (props) => {\n    return (\n        <div className={classes.DrawerToggle} onClick={props.openSideDrawer}>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n}\n\ndrawerToggle.propTypes = {\n    openSideDrawer: PropTypes.func.isRequired\n}\n\nexport default drawerToggle;","import React from 'react';\nimport classes from './Toolbar.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\nimport PropTypes from 'prop-types';\n\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle openSideDrawer={props.openSideDrawer}></DrawerToggle>\n        <div className={classes.Logo }>\n        <Logo></Logo>\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems isAuthenticated={props.isAuth}></NavigationItems>\n        </nav>\n    </header>\n)\n\ntoolbar.propTypes = {\n    openSideDrawer: PropTypes.func.isRequired\n}\n\nexport default toolbar;","import React from 'react';\nimport classes from './Backdrop.css'\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked} ></div> : null\n)\n \nexport default backdrop;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.css';\nimport BackDrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\nimport PropTypes from 'prop-types';\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if(props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open]\n    }\n    return (\n        <Aux>\n        <div className={classes.mobileOnly}>\n        <BackDrop show={props.open} clicked={props.closed}></BackDrop>\n        </div>\n        <div className={attachedClasses.join(' ')}>\n            <div className={classes.Logo}>\n        <Logo></Logo>\n        </div>\n            <nav>\n                <NavigationItems isAuthenticated={props.isAuth}></NavigationItems>\n            </nav>\n        </div>\n        </Aux>\n    );\n}\n\nsideDrawer.propTypes = {\n    open: PropTypes.bool.isRequired,\n    closed: PropTypes.func\n}\nexport default sideDrawer;","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport classes from './Layout.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nimport { connect } from 'react-redux';\n\nclass layout extends Component {\n\n    state = {\n        showSideDrawer: true  \n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({ showSideDrawer: false});\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return { showSideDrawer: !this.state.showSideDrawer}\n        }); \n    }\n\n    render() {\n        return (\n            <Aux>\n            <Toolbar\n            isAuth={this.props.isAuthenticated}\n            openSideDrawer={this.sideDrawerToggleHandler}></Toolbar>\n            <SideDrawer\n            isAuth={this.props.isAuthenticated}\n            open={this.state.showSideDrawer}\n            closed={this.sideDrawerClosedHandler}></SideDrawer>\n            <main className={classes.Content}>\n                {this.props.children}\n            </main>\n        </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token ? true : false\n    }\n}\nexport   default connect(mapStateToProps)(layout);","import React from 'react';\nimport classes from './BurgerIngredient.css';\nimport PropTypes from 'prop-types';\n\nconst burgerIngredient = (props) => {\n    let ingredient = null;\n\n    switch (props.type) {\n        case ('bread-bottom'):\n            ingredient = <div className={classes.BreadBottom}></div>;\n            break;\n        case ('bread-top'):\n            ingredient = (\n                <div className={classes.BreadTop}>\n                    <div className={classes.Seeds1}></div>\n                    <div className={classes.Seeds2}></div>\n                </div>\n            );\n            break;\n        case ('meat'):\n            ingredient = <div className={classes.Meat}></div>;\n            break;\n        case ('cheese'):\n            ingredient = <div className={classes.Cheese}></div>;\n            break;\n        case ('bacon'):\n            ingredient = <div className={classes.Bacon}></div>;\n            break;\n        case ('salad'):\n            ingredient = <div className={classes.Salad}></div>;\n            break;\n        default:\n            ingredient = null;\n\n    }\n\n    return ingredient;\n}\n\nburgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default burgerIngredient;","import React from 'react';\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredient';\nimport classes from './Burger.css';\nimport Proptypes from 'prop-types';\n\nconst burger = (props) => {\n    let transformIngredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                return <BurgerIngredient key={igKey + i} type={igKey}></BurgerIngredient>\n            })\n        });\n    if(Object.keys(props.ingredients).length > 0) {\n        if (Object.values(props.ingredients).reduce((a, b) => a + b) === 0) {\n            transformIngredients = <p>Please start adding ingredient!!</p>\n        }\n    }\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type='bread-top'></BurgerIngredient>\n            {transformIngredients}\n            <BurgerIngredient type='bread-bottom'></BurgerIngredient>\n        </div>\n    );\n}\n\nburger.propTypes = {\n    ingredients: Proptypes.object.isRequired,\n}\n\nexport default burger;","import React from 'react';\nimport classes from './BuildControl.css';\nimport PropTypes from 'prop-types';\n\nconst buildControl = (props) => {\n    return (\n        <div className={classes.BuildControl}>\n            <div className={classes.Label}>{props.label}</div>\n            <button\n                onClick={props.removeIngrient}\n                className={classes.Less}\n                disabled={props.disabledBtn}>Less</button>\n            <button\n                onClick={props.addIngredient}\n                className={classes.More}>More</button>\n        </div>\n    );\n}\n\nbuildControl.propTypes = {\n    label: PropTypes.string.isRequired,\n    removeIngrient: PropTypes.func.isRequired,\n    disabledBtn: PropTypes.bool.isRequired,\n    addIngredient: PropTypes.func.isRequired\n}\n\nexport default buildControl;","import React from 'react';\nimport classes from './BuildControls.css';\nimport BuildControl from '../BuildControls/BuildControl/BuildControl';\nimport PropTypes from 'prop-types';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' }\n]\nconst buildControls = (props) => {\n\n    return (\n        <div className={classes.BuildControls}>\n            <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n            {controls.map(ctrl => (\n                <BuildControl\n                    key={ctrl.label}\n                    label={ctrl.label}\n                    addIngredient={() => props.addIngredient(ctrl.type)}\n                    removeIngrient={() => props.removeIngredient(ctrl.type)}\n                    disabledBtn={props.buttondisabled[ctrl.type]} />\n            ))}\n            <button\n                className={classes.OrderButton}\n                disabled={!props.purchasable}\n                onClick={props.purchasing}>\n                {props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}\n                </button>\n        </div>\n    );\n}\n\nbuildControls.propTypes = {\n    price: PropTypes.number.isRequired,\n    addIngredient: PropTypes.func.isRequired,\n    removeIngredient: PropTypes.func.isRequired,\n    buttondisabled: PropTypes.object.isRequired,\n    purchasable: PropTypes.bool.isRequired,\n    purchasing: PropTypes.func.isRequired\n}\n\nexport default buildControls;","import React, { Component } from 'react';\nimport classes from './Modal.css'\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children\n    }\n\n    render() {\n        return(\n            (\n                <Aux>\n                    <Backdrop show={this.props.show} clicked={this.props.modalClosed}></Backdrop>\n                    <div\n                        className={classes.Modal}\n                        style={{\n                            transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                            opacity: this.props.show ? '1' : '0'\n                        }}>\n                        {this.props.children}\n                    </div>\n                </Aux>\n            )\n        )\n    }\n};\n\nexport default Modal;","import React from 'react';\nimport classes from './Button.css';\n\nconst button = (props) => (\n    <button\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        disabled={props.disabled}\n        onClick={props.clicked}>\n        {props.children}\n    </button>\n)\n\nexport default button;","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\nimport PropTypes from 'prop-types';\n\nclass OrderSummary extends Component {\n\n    componentWillUpdate() {\n\n    }\n\n    render() {\n        const ingredientsSummary = Object.keys(this.props.ingrediends)\n            .map(igKey => <li key={igKey}>\n                <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingrediends[igKey]}\n            </li>)\n        return (\n            <Aux>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {ingredientsSummary}\n                </ul>\n                <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\n                <p>Continue to checkout</p>\n                <Button btnType='Danger' clicked={this.props.modalClosed}>CANCEL</Button>\n                <Button btnType='Success' clicked={this.props.continuePurchase}>CONTINUE</Button>\n            </Aux>\n        )\n    }\n\n}\n\nOrderSummary.propTypes = {\n    price: PropTypes.number,\n    modalClosed: PropTypes.func.isRequired,\n    continuePurchase: PropTypes.func.isRequired\n}\n\nexport default OrderSummary;","import React from 'react';\nimport classes from './Spinner.css';\n\nconst spinner = () => {\n    return (\n        <div className={classes.loader}>Loading...</div>\n    );\n}\n \nexport default spinner;","import React, { Component } from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n\n        state = {\n            error: null\n        };\n\n        componentWillMount() {\n            this.reqInterceptors = axios.interceptors.request.use(req => {\n                this.setState({ error: null });\n                return req;\n            })\n            this.resInterceptors = axios.interceptors.response.use(res => res, error => {\n                this.setState({ error: error });\n            })\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptors);\n            axios.interceptors.response.eject(this.resInterceptors);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({ error: null })\n        }\n\n        render() {\n            return (\n                <Aux>\n                    <Modal\n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}!!\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            )\n        }\n    }\n};\n\nexport default withErrorHandler","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-8014e.firebaseio.com/'\n});\n\n\n\nexport default instance;","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (authData) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        data: authData\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000);\n    };\n};\n\nexport const auth = (email, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCyhEevyRCrdv2tDqzWEQkCDuqagpAKUvc';\n        if (!isSignup) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCyhEevyRCrdv2tDqzWEQkCDuqagpAKUvc';\n        }\n\n        axios.post(url, authData)\n            .then(res => {\n                const expirationDate = new Date(new Date().getTime() + res.data.expiresIn * 1000);\n                localStorage.setItem('token', res.data.idToken);\n                localStorage.setItem('expirationDate', expirationDate);\n                localStorage.setItem('userId', res.data.localId);\n                dispatch(authSuccess(res.data));\n                dispatch(checkAuthTimeout(res.data.expiresIn));\n            })\n            .catch(error => {\n                dispatch(authFail(error.response.data.error.message))\n            })\n    }\n}\n\nexport const setAuthRedirectPath = path => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if(!token) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if(expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                const userId = localStorage.getItem('userId');\n                const userData = {\n                    idToken: token,\n                    localId: userId\n                }\n                dispatch(authSuccess(userData));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/ 1000));\n            }\n        }\n    }\n}","// Creating burger\nexport const ADD_INGREDIENTS = 'ADD_INGREDIENTS';\nexport const REMOVE_INGREDIENTS = 'REMOVE_INGREDIENTS';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\n// Purchasing burger\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\n// Fetching orders\nexport const FETCH_ORDER_START = 'FETCH_ORDER_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\n// Login\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport WithErrorHandler from '../../hoc/WithErrorHandler/WithErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios-orders';\nimport { connect } from 'react-redux';\n\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        purchasing: false\n    }\n\n    componentDidMount() {\n        this.props.onInitIngredients();\n    };\n\n    updatePurchaseState = (ingredients) => {\n        const sum = Object.keys(ingredients)\n            .map(igKey => ingredients[igKey])\n            .reduce((sum, el) => sum + el, 0);\n\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        if(this.props.isAuthenticated) {\n            this.setState({ purchasing: true });\n        } else {\n            this.props.onSetAuthRedirectPath('/checkout');\n            this.props.history.push('/login');\n        }\n        \n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({ purchasing: false })\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    }\n\n    render() {\n        const buttonDisabledInfo = {\n            ...this.props.ing\n        }\n        for (let key in buttonDisabledInfo) {\n            buttonDisabledInfo[key] = buttonDisabledInfo[key] <= 0;\n        }\n        let orderSummary = null;\n        let burger = this.props.error ? <h1 style={{textAlign: 'center'}}>Ingredients can't be loaded!! </h1> : <Spinner />;\n        if (this.props.ing) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ing} />\n                    <BuildControls\n                        addIngredient={this.props.addIngredient}\n                        removeIngredient={this.props.removeIngredient}\n                        buttondisabled={buttonDisabledInfo}\n                        price={this.props.totalPrice}\n                        purchasable={this.updatePurchaseState(this.props.ing)}\n                        isAuth={this.props.isAuthenticated}\n                        purchasing={this.purchaseHandler} />\n                </Aux>\n            );\n            orderSummary = <OrderSummary\n                ingrediends={this.props.ing}\n                modalClosed={this.purchaseCancelHandler}\n                continuePurchase={this.purchaseContinueHandler}\n                price={this.props.totalPrice} />\n        }\n\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ing: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token ? true : false\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addIngredient: (ingredientName) => dispatch(actions.addIngredient(ingredientName)),\n        removeIngredient: (ingredientName) => dispatch(actions.removeIngredient(ingredientName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = name => {\n    return {\n        type: actionTypes.ADD_INGREDIENTS,\n        ingredientName: name\n    };\n};\n\nexport const removeIngredient = name => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENTS,\n        ingredientName: name\n    };\n};\n\nexport const setIngredients = ingredients => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    };\n};\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    };\n};\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('/ingredients.json')\n            .then(response => dispatch(setIngredients(response.data)))\n            .catch(error => dispatch(fetchIngredientsFailed()))\n    };\n};","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    }\n}\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    }\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    }\n}\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post('/orders.json?auth=' + token, orderData)\n            .then( response => dispatch(purchaseBurgerSuccess(response.data.name, orderData)))\n            .catch(error => dispatch(purchaseBurgerFail(error)))\n    }\n}\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    }\n}\n\n// Order fetching starts here\n\nexport const fetchOrdersSuccess = (orderData) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        ordersData: orderData\n    }\n}\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    }\n}\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDER_START\n    }\n}\n\nexport const fetchOrders = (token) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        axios.get('/orders.json?auth=' + token)\n            .then(res => {\n                const fetchedOrders = [];\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key\n                    })\n                };\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            })\n            .catch(err => dispatch(fetchOrdersFail()));\n    }\n}\n","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.css';\n\nconst checkoutSummary = (props) => {\n    return ( \n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button\n            btnType='Danger'\n            clicked={props.checkoutCancelled}>\n                CANCEL\n                </Button>\n            <Button\n            btnType='Success'\n            clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    );\n}\n \nexport default checkoutSummary;","import React from 'react';\nimport classes from './Input.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n    let validationError = null;\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid)\n    }\n\n    if (props.invalid && props.touched) {\n        validationError = <p>Please enter a valid value!</p>;\n    }\n    switch (props.elementType) {\n        case 'input':\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n\n        case 'textarea':\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n\n        case 'select':\n            inputElement = <select\n                className={inputClasses.join(' ')}\n                value={props.value}\n                onChange={props.changed}>\n                {props.elementConfig.options.map(option => (\n                    <option key={option.value} value={option.value}>\n                        {option.displayValue}\n                    </option>\n                ))}\n            </select>;\n            break;\n\n        default:\n            inputElement = <input\n                className={classes.InputElement}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n            {validationError}\n        </div>\n    );\n}\n\nexport default input;","import React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\nimport { connect } from 'react-redux';\nimport withErrorHandler from '../../../hoc/WithErrorHandler/WithErrorHandler';\nimport * as actions from '../../../store/actions/index';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Zip Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 4,\n                    maxLength: 6,\n                    isNumeric: true\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        { value: 'fastest', displayValue: 'Fastest' },\n                        { value: 'average', displayValue: 'Average' },\n                        { value: 'slow', displayValue: 'Slow' },\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your Email'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        formIsValid: false\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        this.setState({ loading: true });\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingrediends: this.props.ings,\n            price: this.props.totalPrice.toFixed(2),\n            orderData: formData\n        }\n\n        this.props.onOrderBurger(order, this.props.token);\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n\n        if (rules.isEmail) {\n            const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            isValid = pattern.test(value) && isValid;\n        }\n\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid;\n        }\n\n        \n        return isValid;\n    }\n\n    inputChangeHandler = (event, inputIdentifier) => {\n        const formData = {\n            ...JSON.parse(JSON.stringify(this.state.orderForm))\n        };\n        const updatedFormElement = {\n            ...formData[inputIdentifier]\n        }\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n        updatedFormElement.touched = true;\n        formData[inputIdentifier] = updatedFormElement;\n\n        let formIsValid = true;\n        for (let inputIdentifier in formData) {\n            formIsValid = formData[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({ orderForm: formData, formIsValid: formIsValid })\n    }\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            })\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map((formElement, index) => (\n                    <Input\n                        key={index}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        changed={(event) => this.inputChangeHandler(event, formElement.id)}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched} />\n                ))}\n                <Button\n                btnType=\"Success\"\n                disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if (this.props.loading) {\n            form = <Spinner />;\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter you contact Data!!</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport { Route, Redirect } from 'react-router-dom';\nimport ContactData from './ContactData/ContactData';\nimport { connect } from 'react-redux';\n\nclass Checkout extends Component {\n\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() {\n        let summary = <Redirect to='/'/>;\n        if(this.props.ings) {\n            const purchasedRedirect = this.props.purchased? <Redirect to='/'/> : null;\n            summary = (\n            <div>\n                {purchasedRedirect}\n                <CheckoutSummary\n                ingredients={this.props.ings}\n                checkoutCancelled={this.checkoutCancelledHandler}\n                checkoutContinued={this.checkoutContinuedHandler} />\n                <Route\n                    path={this.props.match.path + '/contact-data'}\n                    component={ContactData}/>\n                    </div>)\n        }\n        return summary;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n}\n\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\nimport classes from './Order.css';\n\nconst Order = (props) => {\n    const ingredients = [];\n    for (let ingredientsName in props.ingredients) {\n        ingredients.push({\n            name: ingredientsName,\n            amount: props.ingredients[ingredientsName]\n        })\n    }\n\n    const ingredientsOutput = ingredients.map((ig, index) => {\n        return <span\n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n            }}\n            key={index}>\n            {ig.name} ({ig.amount})\n                </span>\n    })\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientsOutput}</p>\n            <p>Price: <strong>USD {props.price}</strong></p>\n        </div>\n    );\n}\n\nexport default Order;","import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport WithErrorHandler from '../../hoc/WithErrorHandler/WithErrorHandler';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport * as action from '../../store/actions/index';\nimport { connect } from 'react-redux';\nclass Orders extends Component {\n\n    componentDidMount() {\n        this.props.fetchOrders(this.props.token);\n    }\n\n    render() {\n        let displayOrders = <Spinner/>;\n        if(!this.props.loading) {\n            displayOrders = this.props.orders.map(order => (<Order\n                key={order.id}\n                ingredients={order.ingrediends}\n                price={order.price} />));\n        }\n        return (\n            <div>\n                {displayOrders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchOrders: (token) => dispatch(action.fetchOrders(token))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandler(Orders, axios));","import React, { Component } from 'react';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport classes from './Auth.css';\nimport * as action from '../../store/actions/index';\nimport { connect } from 'react-redux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { Redirect } from 'react-router-dom';\n\nclass Auth extends Component {\n    state = {\n        loginForm: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your Email Address'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Your Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        formIsValid: false,\n        isSignup: true\n    }\n\n    componentDidMount() {\n        if(!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\n            this.props.onSetRedirectPath();\n        }\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n\n        if (rules.isEmail) {\n            const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            isValid = pattern.test(value) && isValid;\n        }\n\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid;\n        }\n\n\n        return isValid;\n    };\n\n    inputChangeHandler = (event, controlName) => {\n        const formData = {\n            ...JSON.parse(JSON.stringify(this.state.loginForm)),\n            [controlName]: {\n                ...this.state.loginForm[controlName],\n                value: event.target.value,\n                valid: this.checkValidity(event.target.value, this.state.loginForm[controlName].validation),\n                touched: true\n            }\n        };\n\n        let formIsValid = true;\n        for (let inputIdentifier in formData) {\n            formIsValid = formData[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({ loginForm: formData, formIsValid: formIsValid })\n    }\n\n    submitHandler = event => {\n        event.preventDefault();\n        this.props.onAuth(this.state.loginForm.email.value, this.state.loginForm.password.value, this.state.isSignup);\n    }\n\n    switchAuthModeHandler = () => {\n        this.setState(prevState => {\n            return { isSignup: !prevState.isSignup };\n        })\n    }\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.loginForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.loginForm[key]\n            })\n        };\n\n        let form = formElementsArray.map((formElement, index) => (\n            <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                changed={(event) => this.inputChangeHandler(event, formElement.id)}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched} />\n        ));\n\n        if (this.props.loading) {\n            form = <Spinner />\n        }\n\n        let errorMessage = null;\n        if (this.props.error) {\n            errorMessage = <p style={{ color: 'red' }}>{this.props.error}</p>;\n        }\n        return (\n            <div className={classes.Auth}>\n                {this.props.isAuthenticated ? <Redirect to={this.props.authRedirectPath} /> : null}\n                {errorMessage}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button\n                        btnType=\"Success\"\n                        disabled={!this.state.formIsValid}>{this.state.isSignup ? 'SIGNUP' : 'SIGNIN'}</Button>\n                </form>\n                <Button\n                    btnType=\"Danger\"\n                    clicked={this.switchAuthModeHandler}>SWITCH TO {this.state.isSignup ? 'SIGNIN' : 'SIGNUP'}</Button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token ? true : false,\n        buildingBurger: state.burgerBuilder.building,\n        authRedirectPath: state.auth.authRedirectPath\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignup) => dispatch(action.auth(email, password, isSignup)),\n        onSetRedirectPath: () => dispatch(action.setAuthRedirectPath('/'))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\nimport * as actions from '../../../store/actions/index';\nimport { connect } from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\nclass Logout extends Component {\n    state = {  }\n\n    componentDidMount() {\n        this.props.onLogout();\n    }\n    render() { \n        return ( <Redirect to='/'/>);\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    }\n}\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport './App.css';\nimport Layout from './containers/Layout/layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport { Route, Switch } from 'react-router-dom';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\n\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n       <Layout>\n         <Switch>\n         <Route path='/checkout' component={Checkout}/>\n         <Route path='/orders' component={Orders}/>\n         <Route path='/login' component={Auth}/>\n         <Route path='/logout' component={Logout}/>\n         <Route path='/' exact component={BurgerBuilder}/>\n         </Switch>\n       </Layout>\n      </div>\n    );\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.7,\n    cheese: 0.6,\n    bacon: 0.4,\n    meat: 0.9\n}\nconst reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENTS:\n            const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 };\n            const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n            const updatedState = {\n                ingredients: updatedIngredients,\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n                building: true\n            }\n            return updateObject(state, updatedState);\n        case actionTypes.REMOVE_INGREDIENTS:\n                const updatedIng = { [action.ingredientName]:\n                    (state.ingredients[action.ingredientName] > 0) ?\n                        state.ingredients[action.ingredientName] - 1 :\n                        state.ingredients[action.ingredientName]};\n                const updatedIngs = updateObject(state.ingredients, updatedIng);\n                const updatedSt = {\n                    ingredients: updatedIngs,\n                    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n                    building: true\n                }\n                return updateObject(state, updatedSt);\n        case actionTypes.SET_INGREDIENTS:\n            return updateObject(state, {\n                ingredients: {\n                    salad: action.ingredients.salad,\n                    bacon: action.ingredients.bacon,\n                    cheese: action.ingredients.cheese,\n                    meat: action.ingredients.meat\n                },\n                totalPrice: initialState.totalPrice,\n                error: false,\n                building: false\n            })\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            return updateObject(state, { error: true});\n        default:\n            return state;\n    }\n\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    order: [],\n    loading: false,\n    purchased: false,\n    orders: []\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            const newOrder = updateObject(action.orderData, { id: action.orderId });\n            return updateObject(state, {\n                loading: false,\n                purchased: true,\n                order: state.order.concat(newOrder)\n            });\n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return updateObject(state, { loading: false });\n        case actionTypes.PURCHASE_BURGER_START:\n            return updateObject(state, { loading: true });\n        case actionTypes.PURCHASE_INIT:\n            return updateObject(state, { purchased: false });\n        case actionTypes.FETCH_ORDER_START:\n            return updateObject(state, { loading: true });\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            return updateObject(state, { orders: action.ordersData, loading: false });\n        case actionTypes.FETCH_ORDERS_FAIL:\n            return updateObject(state, { loading: false });\n        default: {\n            return state;\n        }\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START:\n            return updateObject(state, { error: null, loading: true });\n        case actionTypes.AUTH_SUCCESS:\n            return updateObject(state, {\n                token: action.data.idToken,\n                userId: action.data.localId,\n                error: null,\n                loading: false\n            });\n        case actionTypes.AUTH_FAIL:\n            let errorMessage;\n            switch (action.error) {\n                case 'EMAIL_EXISTS': errorMessage = 'Email Already exist please login';\n                    break;\n                case 'INVALID_PASSWORD': errorMessage = 'Invalid Password';\n                    break;\n                case 'EMAIL_NOT_FOUND': errorMessage = 'Email not found - Please register First';\n                    break;\n                default: errorMessage = null\n            }\n            return updateObject(state, { error: errorMessage, loading: false })\n        case actionTypes.AUTH_LOGOUT:\n            return updateObject(state, { token: null, userId: null });\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\n            return updateObject(state, { authRedirectPath: action.path})\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}