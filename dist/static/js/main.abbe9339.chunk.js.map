{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredient.css","components/Navigation/SideDrawer/SideDrawer.css","components/UI/Input/Input.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","containers/Layout/Layout.css","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","App.css","hoc/Aux/Aux.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/layout.js","components/Burger/BurgerIngredients/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/WithErrorHandler/WithErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","alt","src","burgerLogo","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","openSideDrawer","toolbar","Toolbar","DesktopOnly","backdrop","show","Backdrop","clicked","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","mobileOnly","closed","join","layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","burgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","length","values","reduce","a","b","Burger","buildControl","BuildControl","Label","label","removeIngrient","Less","disabled","disabledBtn","addIngredient","More","controls","buildControls","BuildControls","price","toFixed","ctrl","removeIngredient","buttondisabled","OrderButton","purchasable","purchasing","Modal","nextProps","nextState","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","ingredientsSummary","ingrediends","textTransform","continuePurchase","instance","axios","create","baseURL","spinner","loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptors","interceptors","request","use","req","resInterceptors","response","res","eject","message","BurgerBuilder","loading","updatePurchaseState","sum","el","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","buttonDisabledInfo","ing","orderSummary","totalPrice","connect","dispatch","ingredientName","WithErrorHandler","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","validationError","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","deliveryMethod","email","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","ings","orderData","post","then","catch","inputChangeHandler","inputIdentifier","JSON","parse","stringify","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","index","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","path","match","component","Order","ingredientsName","amount","ingredientsOutput","ig","display","border","padding","orders","get","fetchedOrders","data","err","App","Orders","Boolean","window","location","hostname","initialState","salad","cheese","meat","bacon","INGREDIENT_PRICES","reducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.abbe9339.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"pgUasRYgKTdOMBDUTNak0\",\"BreadTop\":\"_1qwk-L-8NpT6Q3lyX9_XXF\",\"Seeds1\":\"_1NoR3Sg7ZkFv26IWaYSeB7\",\"Seeds2\":\"rJjjNXl8KAgomxzUAsNho\",\"Meat\":\"_27By3t6afo9AOFbaZHs-BQ\",\"Cheese\":\"_3Xxg-zMN5HGIkTGGAtS8nI\",\"Salad\":\"PEJF9v7w4x887LIhMkQna\",\"Bacon\":\"_1FuPvnvGSOPSwWWui0bCVS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"_21TuB0Dn6JJ4uEYkpf9Fnt\",\"Open\":\"_1pVYRaiLBtOhv7pDNimBtN\",\"Close\":\"_3Yv1lLM58kyRaR73W22KWZ\",\"Logo\":\"_3TkPvMPv1WUzP1NgAUT6zE\",\"mobileOnly\":\"_3bhqfiUYB1oOzFeJkp2Ojx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"s67N0w35nKdhFxX_3zncw\",\"Label\":\"_n-1my-7YxR9EuzWR3hhB\",\"InputElement\":\"_2-aFxd6_SUnHTHpTf8dvYS\",\"Invalid\":\"_1sl1p7M77V1I9nxTQviKpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"_1jYc3QBtl-VmgIWdCI3dgO\",\"Label\":\"_33Z-plxrqIneM7Mz2ytOp0\",\"Less\":\"_377MJOSYo2UYjMj1U14k03\",\"More\":\"_28-hQFZzubxjJbKbVayD5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"_2JJW-ZloCsemWXc-SwluYI\",\"Logo\":\"_1efBDQJDXv28ttI2RtLXHD\",\"DesktopOnly\":\"WADUdqFzcPCSrUAJGFXrf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"_23bcunS9Qq8yRK8U15WWqn\",\"active\":\"_2zJdO1aspVrGyx-JgFjMYX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"_3_01fOopnX44ubS-oaxkTR\",\"OrderButton\":\"myBwTggVYuoTSZ0phsfQj\",\"enable\":\"_3jYIqaQjQmo_d3HEVAUYmZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"QI7b2B9HFdWRqXJlhx5ZF\",\"Success\":\"_2dHUtYmIiKVpRl3omZjpfb\",\"Danger\":\"_2xnhNuUUklZ_76EhvNOs5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"_2fWdXx73utokZkSQg8nql-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"_19WaN2tuJCY7yX7kGD_ZBx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"_yd_dZzBcrRT8NyTlYD_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"_26to0rZE2eHfVYZs2qTwFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"efy1yH85jAELhES8l7b-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"_3K4F-Qd9PP5cwDxK60_fC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"_32_-amvWF8w07UmzDeLfZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"UBmsktTD6us6IP-6aYec5\",\"load2\":\"_1N7mgFPOaqyEMO5kgrH5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"_1xBm4j5hECL-q6sCIhiBB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"_1J81rlRO5zxuF98VMkEamZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"_4yi4ZpfqAgHINYViIZYP6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"_1o-FpbQrR11SDFN-G7O4U3\",\"App-logo\":\"_3JCPttIlaO1n9gbarj-AYQ\",\"App-logo-spin\":\"RvI1Jd7nZvV5oabR4RbAY\",\"App-header\":\"_3iH8LjVH-8aINDFVrlCaZ1\",\"App-link\":\"_13fTZYk7Fx94Q52NR6_8FR\"};","\nconst aux = props => props.children;\n\nexport default aux;","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.css';\n\nconst logo = (props) => (\n    <div className={classes.Logo}>\n        <img alt=\"My Logo\" src={burgerLogo}/>\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport classes from './NavigationItem.css';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink\n            to={props.link}\n            exact\n            activeClassName={classes.active}>\n            {props.children}\n        </NavLink>\n    </li>\n)\n\nnavigationItem.propTypes = {\n    link: PropTypes.string.isRequired,\n    active: PropTypes.bool\n}\n\nexport default navigationItem;","import React from 'react';\nimport classes from './NavigationItems.css';\nimport NavigationItem from '../NavigationItems/NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link='/' >Burger Builder</NavigationItem>\n        <NavigationItem link='/orders'>Orders</NavigationItem>\n    </ul>\n)\n \nexport default navigationItems;","import React from 'react';\nimport classes from './DrawerToggle.css';\nimport PropTypes from 'prop-types';\n\nconst drawerToggle = (props) => {\n    return (\n        <div className={classes.DrawerToggle} onClick={props.openSideDrawer}>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n}\n\ndrawerToggle.propTypes = {\n    openSideDrawer: PropTypes.func.isRequired\n}\n\nexport default drawerToggle;","import React from 'react';\nimport classes from './Toolbar.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\nimport PropTypes from 'prop-types';\n\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle openSideDrawer={props.openSideDrawer}></DrawerToggle>\n        <div className={classes.Logo }>\n        <Logo></Logo>\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems></NavigationItems>\n        </nav>\n    </header>\n)\n\ntoolbar.propTypes = {\n    openSideDrawer: PropTypes.func.isRequired\n}\n\nexport default toolbar;","import React from 'react';\nimport classes from './Backdrop.css'\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked} ></div> : null\n)\n \nexport default backdrop;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.css';\nimport BackDrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\nimport PropTypes from 'prop-types';\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if(props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open]\n    }\n    return (\n        <Aux>\n        <div className={classes.mobileOnly}>\n        <BackDrop show={props.open} clicked={props.closed}></BackDrop>\n        </div>\n        <div className={attachedClasses.join(' ')}>\n            <div className={classes.Logo}>\n        <Logo></Logo>\n        </div>\n            <nav>\n                <NavigationItems></NavigationItems>\n            </nav>\n        </div>\n        </Aux>\n    );\n}\n\nsideDrawer.propTypes = {\n    open: PropTypes.bool.isRequired,\n    closed: PropTypes.func\n}\nexport default sideDrawer;","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport classes from './Layout.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass layout extends Component {\n\n    state = {\n        showSideDrawer: true  \n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({ showSideDrawer: false});\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return { showSideDrawer: !this.state.showSideDrawer}\n        }); \n    }\n\n    render() {\n        return (\n            <Aux>\n            <Toolbar openSideDrawer={this.sideDrawerToggleHandler}></Toolbar>\n            <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}></SideDrawer>\n            <main className={classes.Content}>\n                {this.props.children}\n            </main>\n        </Aux>\n        )\n    }\n}\n\nexport default layout;","import React from 'react';\nimport classes from './BurgerIngredient.css';\nimport PropTypes from 'prop-types';\n\nconst burgerIngredient = (props) => {\n    let ingredient = null;\n\n    switch (props.type) {\n        case ('bread-bottom'):\n            ingredient = <div className={classes.BreadBottom}></div>;\n            break;\n        case ('bread-top'):\n            ingredient = (\n                <div className={classes.BreadTop}>\n                    <div className={classes.Seeds1}></div>\n                    <div className={classes.Seeds2}></div>\n                </div>\n            );\n            break;\n        case ('meat'):\n            ingredient = <div className={classes.Meat}></div>;\n            break;\n        case ('cheese'):\n            ingredient = <div className={classes.Cheese}></div>;\n            break;\n        case ('bacon'):\n            ingredient = <div className={classes.Bacon}></div>;\n            break;\n        case ('salad'):\n            ingredient = <div className={classes.Salad}></div>;\n            break;\n        default:\n            ingredient = null;\n\n    }\n\n    return ingredient;\n}\n\nburgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default burgerIngredient;","import React from 'react';\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredient';\nimport classes from './Burger.css';\nimport Proptypes from 'prop-types';\n\nconst burger = (props) => {\n    let transformIngredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                return <BurgerIngredient key={igKey + i} type={igKey}></BurgerIngredient>\n            })\n        });\n    if(Object.keys(props.ingredients).length > 0) {\n        if (Object.values(props.ingredients).reduce((a, b) => a + b) === 0) {\n            transformIngredients = <p>Please start adding ingredient!!</p>\n        }\n    }\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type='bread-top'></BurgerIngredient>\n            {transformIngredients}\n            <BurgerIngredient type='bread-bottom'></BurgerIngredient>\n        </div>\n    );\n}\n\nburger.propTypes = {\n    ingredients: Proptypes.object.isRequired,\n}\n\nexport default burger;","import React from 'react';\nimport classes from './BuildControl.css';\nimport PropTypes from 'prop-types';\n\nconst buildControl = (props) => {\n    return (\n        <div className={classes.BuildControl}>\n            <div className={classes.Label}>{props.label}</div>\n            <button\n                onClick={props.removeIngrient}\n                className={classes.Less}\n                disabled={props.disabledBtn}>Less</button>\n            <button\n                onClick={props.addIngredient}\n                className={classes.More}>More</button>\n        </div>\n    );\n}\n\nbuildControl.propTypes = {\n    label: PropTypes.string.isRequired,\n    removeIngrient: PropTypes.func.isRequired,\n    disabledBtn: PropTypes.bool.isRequired,\n    addIngredient: PropTypes.func.isRequired\n}\n\nexport default buildControl;","import React from 'react';\nimport classes from './BuildControls.css';\nimport BuildControl from '../BuildControls/BuildControl/BuildControl';\nimport PropTypes from 'prop-types';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' }\n]\nconst buildControls = (props) => {\n\n    return (\n        <div className={classes.BuildControls}>\n            <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n            {controls.map(ctrl => (\n                <BuildControl\n                    key={ctrl.label}\n                    label={ctrl.label}\n                    addIngredient={() => props.addIngredient(ctrl.type)}\n                    removeIngrient={() => props.removeIngredient(ctrl.type)}\n                    disabledBtn={props.buttondisabled[ctrl.type]} />\n            ))}\n            <button\n                className={classes.OrderButton}\n                disabled={!props.purchasable}\n                onClick={props.purchasing}>\n                ORDER NOW\n                </button>\n        </div>\n    );\n}\n\nbuildControls.propTypes = {\n    price: PropTypes.number.isRequired,\n    addIngredient: PropTypes.func.isRequired,\n    removeIngredient: PropTypes.func.isRequired,\n    buttondisabled: PropTypes.object.isRequired,\n    purchasable: PropTypes.bool.isRequired,\n    purchasing: PropTypes.func.isRequired\n}\n\nexport default buildControls;","import React, { Component } from 'react';\nimport classes from './Modal.css'\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children\n    }\n\n    render() {\n        return(\n            (\n                <Aux>\n                    <Backdrop show={this.props.show} clicked={this.props.modalClosed}></Backdrop>\n                    <div\n                        className={classes.Modal}\n                        style={{\n                            transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                            opacity: this.props.show ? '1' : '0'\n                        }}>\n                        {this.props.children}\n                    </div>\n                </Aux>\n            )\n        )\n    }\n};\n\nexport default Modal;","import React from 'react';\nimport classes from './Button.css';\n\nconst button = (props) => (\n    <button\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        disabled={props.disabled}\n        onClick={props.clicked}>\n        {props.children}\n    </button>\n)\n\nexport default button;","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\nimport PropTypes from 'prop-types';\n\nclass OrderSummary extends Component {\n\n    componentWillUpdate() {\n\n    }\n\n    render() {\n        const ingredientsSummary = Object.keys(this.props.ingrediends)\n            .map(igKey => <li key={igKey}>\n                <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingrediends[igKey]}\n            </li>)\n        return (\n            <Aux>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {ingredientsSummary}\n                </ul>\n                <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\n                <p>Continue to checkout</p>\n                <Button btnType='Danger' clicked={this.props.modalClosed}>CANCEL</Button>\n                <Button btnType='Success' clicked={this.props.continuePurchase}>CONTINUE</Button>\n            </Aux>\n        )\n    }\n\n}\n\nOrderSummary.propTypes = {\n    price: PropTypes.number,\n    modalClosed: PropTypes.func.isRequired,\n    continuePurchase: PropTypes.func.isRequired\n}\n\nexport default OrderSummary;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-8014e.firebaseio.com/'\n});\n\n\n\nexport default instance;","import React from 'react';\nimport classes from './Spinner.css';\n\nconst spinner = () => {\n    return (\n        <div className={classes.loader}>Loading...</div>\n    );\n}\n \nexport default spinner;","import React, { Component } from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n\n        state = {\n            error: null\n        };\n\n        componentWillMount() {\n            this.reqInterceptors = axios.interceptors.request.use(req => {\n                this.setState({ error: null });\n                return req;\n            })\n            this.resInterceptors = axios.interceptors.response.use(res => res, error => {\n                this.setState({ error: error });\n            })\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptors);\n            axios.interceptors.response.eject(this.resInterceptors);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({ error: null })\n        }\n\n        render() {\n            return (\n                <Aux>\n                    <Modal\n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}!!\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            )\n        }\n    }\n};\n\nexport default withErrorHandler","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport WithErrorHandler from '../../hoc/WithErrorHandler/WithErrorHandler';\nimport * as actionType from '../../store/actions';\nimport { connect } from 'react-redux';\n\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        purchasing: false,\n        loading: false,\n        error: false\n    }\n\n    componentDidMount() {\n        // axios.get('/ingredients.json')\n        //     .then(response => this.setState({ ingredients: response.data }))\n        //     .catch(error => this.setState({error: true}))\n    };\n\n    updatePurchaseState = (ingredients) => {\n        const sum = Object.keys(ingredients)\n            .map(igKey => ingredients[igKey])\n            .reduce((sum, el) => sum + el, 0);\n\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        this.setState({ purchasing: true })\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({ purchasing: false })\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.history.push('/checkout');\n    }\n\n    render() {\n        const buttonDisabledInfo = {\n            ...this.props.ing\n        }\n        for (let key in buttonDisabledInfo) {\n            buttonDisabledInfo[key] = buttonDisabledInfo[key] <= 0;\n        }\n        let orderSummary = null;\n        let burger = this.state.error ? <p>Ingredients can't be loaded!! </p> : <Spinner />\n        if (this.props.ing) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ing} />\n                    <BuildControls\n                        addIngredient={this.props.addIngredient}\n                        removeIngredient={this.props.removeIngredient}\n                        buttondisabled={buttonDisabledInfo}\n                        price={this.props.totalPrice}\n                        purchasable={this.updatePurchaseState(this.props.ing)}\n                        purchasing={this.purchaseHandler} />\n                </Aux>\n            );\n            orderSummary = <OrderSummary\n                ingrediends={this.props.ing}\n                modalClosed={this.purchaseCancelHandler}\n                continuePurchase={this.purchaseContinueHandler}\n                price={this.props.totalPrice} />\n        }\n\n        if (this.state.loading) {\n            orderSummary = <Spinner />;\n        }\n\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ing: state.ingredients,\n        totalPrice: state.totalPrice\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addIngredient: (ingredientName) => dispatch({type: actionType.ADD_INGREDIENTS, ingredientName: ingredientName}),\n        removeIngredient: (ingredientName) => dispatch({type: actionType.REMOVE_INGREDIENTS, ingredientName: ingredientName})\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandler(BurgerBuilder, axios));","export const ADD_INGREDIENTS = 'ADD_INGREDIENTS';\nexport const REMOVE_INGREDIENTS = 'REMOVE_INGREDIENTS';","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.css';\n\nconst checkoutSummary = (props) => {\n    return ( \n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button\n            btnType='Danger'\n            clicked={props.checkoutCancelled}>\n                CANCEL\n                </Button>\n            <Button\n            btnType='Success'\n            clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    );\n}\n \nexport default checkoutSummary;","import React from 'react';\nimport classes from './Input.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n    let validationError = null;\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid)\n    }\n\n    if (props.invalid && props.touched) {\n        validationError = <p>Please enter a valid value!</p>;\n    }\n    switch (props.elementType) {\n        case 'input':\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n\n        case 'textarea':\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n\n        case 'select':\n            inputElement = <select\n                className={inputClasses.join(' ')}\n                value={props.value}\n                onChange={props.changed}>\n                {props.elementConfig.options.map(option => (\n                    <option key={option.value} value={option.value}>\n                        {option.displayValue}\n                    </option>\n                ))}\n            </select>;\n            break;\n\n        default:\n            inputElement = <input\n                className={classes.InputElement}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n            {validationError}\n        </div>\n    );\n}\n\nexport default input;","import React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\nimport { connect } from 'react-redux';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Zip Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 4,\n                    maxLength: 6\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        { value: 'fastest', displayValue: 'Fastest' },\n                        { value: 'average', displayValue: 'Average' },\n                        { value: 'slow', displayValue: 'Slow' },\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Email'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        formIsValid: false,\n        loading: false\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        this.setState({ loading: true });\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingrediends: this.props.ings,\n            price: this.props.totalPrice.toFixed(2),\n            orderData: formData\n        }\n\n        axios.post('/orders.json', order)\n            .then(_ => {\n                this.setState({ loading: false });\n                this.props.history.push('/');\n            })\n            .catch(error => this.setState({ loading: false }))\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n\n        return isValid;\n    }\n\n    inputChangeHandler = (event, inputIdentifier) => {\n        const formData = {\n            ...JSON.parse(JSON.stringify(this.state.orderForm))\n        };\n        const updatedFormElement = {\n            ...formData[inputIdentifier]\n        }\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n        updatedFormElement.touched = true;\n        formData[inputIdentifier] = updatedFormElement;\n\n        let formIsValid = true;\n        for (let inputIdentifier in formData) {\n            formIsValid = formData[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({ orderForm: formData, formIsValid: formIsValid })\n    }\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            })\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map((formElement, index) => (\n                    <Input\n                        key={index}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        changed={(event) => this.inputChangeHandler(event, formElement.id)}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched} />\n                ))}\n                <Button\n                btnType=\"Success\"\n                disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if (this.state.loading) {\n            form = <Spinner />;\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter you contact Data!!</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n        totalPrice: state.totalPrice\n    }\n}\nexport default connect(mapStateToProps)(ContactData);","import React, { Component } from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport { Route } from 'react-router-dom';\nimport ContactData from './ContactData/ContactData';\nimport { connect } from 'react-redux';\n\nclass Checkout extends Component {\n\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() {\n        return (\n            <div>\n                <CheckoutSummary\n                    ingredients={this.props.ings}\n                    checkoutCancelled={this.checkoutCancelledHandler}\n                    checkoutContinued={this.checkoutContinuedHandler} />\n                    <Route\n                    path={this.props.match.path + '/contact-data'}\n                    component={ContactData}/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients\n    }\n}\n\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\nimport classes from './Order.css';\n\nconst Order = (props) => {\n    const ingredients = [];\n    for (let ingredientsName in props.ingredients) {\n        ingredients.push({\n            name: ingredientsName,\n            amount: props.ingredients[ingredientsName]\n        })\n    }\n\n    const ingredientsOutput = ingredients.map((ig, index) => {\n        return <span\n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n            }}\n            key={index}>\n            {ig.name} ({ig.amount})\n                </span>\n    })\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientsOutput}</p>\n            <p>Price: <strong>USD {props.price}</strong></p>\n        </div>\n    );\n}\n\nexport default Order;","import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport WithErrorHandler from '../../hoc/WithErrorHandler/WithErrorHandler';\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true\n    }\n\n    componentDidMount() {\n        axios.get('/orders.json')\n            .then(res => {\n                const fetchedOrders = [];\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key\n                    })\n                }\n                this.setState({ orders: fetchedOrders, loading: false })\n            })\n            .catch(err => {\n                this.setState({ loading: false });\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.orders.map(order => (<Order\n                    key={order.id}\n                    ingredients={order.ingrediends}\n                    price={order.price} />))}\n            </div>\n        );\n    }\n}\n\nexport default WithErrorHandler(Orders, axios);","import React, { Component } from 'react';\nimport './App.css';\nimport Layout from './containers/Layout/layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport { Route, Switch } from 'react-router-dom';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n       <Layout>\n         <Switch>\n         <Route path='/checkout' component={Checkout}/>\n         <Route path='/orders' component={Orders}/>\n         <Route path='/' exact component={BurgerBuilder}/>\n         </Switch>\n       </Layout>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from './actions';\n\nconst initialState = {\n    ingredients: {\n        salad: 0,\n        cheese: 0,\n        meat: 0,\n        bacon: 0\n    },\n    totalPrice: 4\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.7,\n    cheese: 0.6,\n    bacon: 0.4,\n    meat: 0.9\n}\nconst reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENTS:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n                },\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n            };\n        case actionTypes.REMOVE_INGREDIENTS:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]:\n                        (state.ingredients[action.ingredientName] > 0) ?\n                            state.ingredients[action.ingredientName] - 1 :\n                            state.ingredients[action.ingredientName]\n                },\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n            };\n        default:\n            return state;\n    }\n\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}