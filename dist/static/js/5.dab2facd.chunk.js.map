{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/Order/Order.css"],"names":["Order","props","ingredients","ingredientsName","push","name","amount","ingredientsOutput","map","ig","index","style","textTransform","display","margin","border","padding","key","className","classes","price","Orders","this","fetchOrders","token","userId","displayOrders","Spinner","loading","orders","order","id","ingrediends","Component","connect","state","auth","dispatch","action","WithErrorHandler","axios","module","exports"],"mappings":"oMAiCeA,EA9BD,SAACC,GACX,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAmBF,EAAMC,YAC9BA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAIlC,IAAMI,EAAoBL,EAAYM,KAAI,SAACC,EAAIC,GAC3C,OAAO,0BACHC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKP,GACJD,EAAGJ,KATD,KASSI,EAAGH,OATZ,QAYX,OACI,yBAAKY,UAAWC,IAAQnB,OACpB,2CAAiBO,GACjB,qCAAU,uCAAaN,EAAMmB,U,wCCrBnCC,E,kLAGEC,KAAKrB,MAAMsB,YAAYD,KAAKrB,MAAMuB,MAAOF,KAAKrB,MAAMwB,U,+BAIpD,IAAIC,EAAgB,kBAACC,EAAA,EAAD,MAOpB,OANIL,KAAKrB,MAAM2B,UACXF,EAAgBJ,KAAKrB,MAAM4B,OAAOrB,KAAI,SAAAsB,GAAK,OAAK,kBAAC,EAAD,CAC5Cb,IAAKa,EAAMC,GACX7B,YAAa4B,EAAME,YACnBZ,MAAOU,EAAMV,YAGjB,6BACKM,O,GAhBIO,aAqCNC,uBAfS,SAAAC,GACpB,MAAO,CACHN,OAAQM,EAAML,MAAMD,OACpBD,QAASO,EAAML,MAAMF,QACrBJ,MAAOW,EAAMC,KAAKZ,MAClBC,OAAQU,EAAMC,KAAKX,WAIA,SAAAY,GACvB,MAAO,CACHd,YAAa,SAACC,EAAOC,GAAR,OAAmBY,EAASC,IAAmBd,EAAOC,QAI5DS,CAA6CK,YAAiBlB,EAAQmB,O,mBC3CrFC,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.dab2facd.chunk.js","sourcesContent":["import React from 'react';\nimport classes from './Order.css';\n\nconst Order = (props) => {\n    const ingredients = [];\n    for (let ingredientsName in props.ingredients) {\n        ingredients.push({\n            name: ingredientsName,\n            amount: props.ingredients[ingredientsName]\n        })\n    }\n\n    const ingredientsOutput = ingredients.map((ig, index) => {\n        return <span\n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n            }}\n            key={index}>\n            {ig.name} ({ig.amount})\n                </span>\n    })\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientsOutput}</p>\n            <p>Price: <strong>USD {props.price}</strong></p>\n        </div>\n    );\n}\n\nexport default Order;","import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport WithErrorHandler from '../../hoc/WithErrorHandler/WithErrorHandler';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport * as action from '../../store/actions/index';\nimport { connect } from 'react-redux';\nclass Orders extends Component {\n\n    componentDidMount() {\n        this.props.fetchOrders(this.props.token, this.props.userId);\n    }\n\n    render() {\n        let displayOrders = <Spinner/>;\n        if(!this.props.loading) {\n            displayOrders = this.props.orders.map(order => (<Order\n                key={order.id}\n                ingredients={order.ingrediends}\n                price={order.price} />));\n        }\n        return (\n            <div>\n                {displayOrders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchOrders: (token, userId) => dispatch(action.fetchOrders(token, userId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandler(Orders, axios));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"_4yi4ZpfqAgHINYViIZYP6\"};"],"sourceRoot":""}